{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/Valine.min.js","path":"js/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/styles.css","path":"libs/open-sans/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.css","path":"libs/font-awesome5/css/fa-brands.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.min.css","path":"libs/font-awesome5/css/fa-brands.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.min.css","path":"libs/font-awesome5/css/fa-solid.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.css","path":"libs/font-awesome5/css/fa-solid.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.css","path":"libs/font-awesome5/css/fontawesome.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.min.css","path":"libs/font-awesome5/css/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff2","path":"libs/font-awesome5/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff","path":"libs/font-awesome5/webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff2","path":"libs/font-awesome5/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.eot","path":"libs/font-awesome5/webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.ttf","path":"libs/font-awesome5/webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff","path":"libs/font-awesome5/webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","path":"libs/jquery/2.1.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.eot","path":"libs/font-awesome5/webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.ttf","path":"libs/font-awesome5/webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.jpg","path":"css/images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.svg","path":"libs/font-awesome5/webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.svg","path":"libs/font-awesome5/webfonts/fa-brands-400.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1531408992000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1531408992000},{"_id":"themes/icarus/README.md","hash":"acd2d5d12820b065345d68f88bfc3a739f8d8ae2","modified":1531408992000},{"_id":"themes/icarus/_config.yml","hash":"6f8e409fac46b8bd146b3e80b81e6ecf7c32b8ad","modified":1538967897559},{"_id":"themes/icarus/package.json","hash":"1bc52ef10a33df23e56bd73c927f605019c87d41","modified":1531408992000},{"_id":"source/_posts/RISE.md","hash":"09f99bc8f0691ce60bdbeeb8a21c407ec1b8b4fd","modified":1538963131475},{"_id":"source/_posts/hexo-创建文章.md","hash":"f9e7c77c634dbfe57a57b5d75c767ad9a0933710","modified":1538967233485},{"_id":"source/_posts/hexo常用指令.md","hash":"c6330304d1ce4ea26bb261dfd722bac0ad3fdfd3","modified":1538191352833},{"_id":"source/_posts/给Hexo博客添加访问统计.md","hash":"b2922e698650fcaebf46617b4db48b8490cf3fe5","modified":1538963237448},{"_id":"source/_posts/递归尾调用优化.md","hash":"f109604b92c4aaeea4c531bbcf45ee18d10750b9","modified":1538993546560},{"_id":"source/_posts/递归树结构解析.md","hash":"f3c949ac51a4d7ce8a710f790bbe8427df4465fe","modified":1538986996578},{"_id":"source/about/index.md","hash":"8d3ed6f9b8444b0a65fb1d955024c31fe219e76e","modified":1538963821446},{"_id":"source/categories/index.md","hash":"fddef9937a21af2e81fe6bd4549e63fcc9c4a63c","modified":1538042427766},{"_id":"source/tags/index.md","hash":"e2ccf34d45ddbfc8ce1a41192350ff6d42239dd9","modified":1538042474759},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE.md","hash":"9393fd3dbc943f1544facb66af7fd8b7a5b9ddbb","modified":1531408992000},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1531408992000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1531408992000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1531408992000},{"_id":"themes/icarus/languages/id.yml","hash":"e4961da507f66c8f7c37f85653a9437cb2056bf6","modified":1531408992000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1531408992000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1531408992000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1531408992000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1531408992000},{"_id":"themes/icarus/languages/tr.yml","hash":"8b7eb6aec264db50dbabea89f680acca256f4cd1","modified":1531408992000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1531408992000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1531408992000},{"_id":"themes/icarus/layout/archive.ejs","hash":"a369f50b7bb4a3fb30c95dccc813f0552172d827","modified":1531408992000},{"_id":"themes/icarus/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1538102359397},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1531408992000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1531408992000},{"_id":"themes/icarus/layout/layout.ejs","hash":"355f02f9f21bd99c8006c88235a8262f986d2101","modified":1538207719751},{"_id":"themes/icarus/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1531408992000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1531408992000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1531408992000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1531408992000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1531408992000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1531408992000},{"_id":"source/_posts/hexo-创建文章/lujing2.jpg","hash":"a390f5b69d7f608004d42bc55182e503bb64f7ff","modified":1538129660626},{"_id":"source/_posts/hexo-创建文章/wenjian.jpg","hash":"1d46842690b5f85273dc39bfebd5157707b982a8","modified":1538130158856},{"_id":"source/_posts/给Hexo博客添加访问统计/timg.jpg","hash":"48008426aebff3897fb41aa4319b0dc6637778ed","modified":1538036753161},{"_id":"source/_posts/递归树结构解析/result.jpg","hash":"d3cc67d6e6db5ab158ddcd335be3b354f2b36a56","modified":1538986270957},{"_id":"themes/icarus/_source/about/index.md","hash":"2847759c65295fdc47685cc32e10ae30b2f022ae","modified":1531408992000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1531408992000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1531408992000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"57c194d0fa268ce2f3e9c755b3154b8a0709f613","modified":1531408992000},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"b4bd2e641af59e06becaa8f2dc97867f023b8dcf","modified":1531408992000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1531408992000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1531408992000},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1531408992000},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"c7998209b9a766eeba6976dd4bdffb1f87469358","modified":1531408992000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"0bce9ca0767b49d2a9fc026a6004a8526a20624b","modified":1531408992000},{"_id":"themes/icarus/layout/comment/livere.ejs","hash":"792e4f0e93b2bdc5abd85d447d804a5c608a9c5c","modified":1531408992000},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1531408992000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"d45f652268671de96c86d8ca50b9deaf011274f0","modified":1531408992000},{"_id":"themes/icarus/layout/comment/valine.ejs","hash":"709bad05d9d9a2578110b845122982070a1d70f0","modified":1538300512585},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1531408992000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"af6381cad6117c940a44cff443e62c34ca0ca72e","modified":1538214457063},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"39be5e6601fd2c251f0a9da3cdec65c3e03f320b","modified":1538036253423},{"_id":"themes/icarus/layout/common/head.ejs","hash":"daf0b5a6201e09782500795f3db84713a92c791a","modified":1531408992000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"83666c38283d0a22082f143dbe629c2853e4e0b7","modified":1538193298500},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"a60d519c968b622e5bdbddd623af41f0d32a5241","modified":1538103252466},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1531408992000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"8cee4531fb0deca8f0951ef93f039028bc7f343c","modified":1531408992000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1531408992000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"48235931698f04ad0ff057a1693ce81e628f9e0a","modified":1531408992000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1531408992000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1531408992000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"e22f99652a220d926103801a3cad55ea9c450e05","modified":1531408992000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1531408992000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1531408992000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1531408992000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"bcf275e42efbc6677a0fd35f5501e7618ffe9e4c","modified":1531408992000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1531408992000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1531408992000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1531408992000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"bddd4425db187d893a5599d69810fa4159d0c45e","modified":1531408992000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1531408992000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1531408992000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1531408992000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1531408992000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"aad118699718b62c0d3f3cfd6f17a181139a76af","modified":1531408992000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"e7942ff12fe2220dd2667216886a71e4f6432bdc","modified":1538122406201},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1531408992000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1531408992000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"539e02107f35e8b3bdb9bf160dc212a433a7b60e","modified":1531408992000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"72cc7b96563d80bb924e615913095f07ea8339b9","modified":1538019030248},{"_id":"themes/icarus/source/css/style.styl","hash":"1716b199dba80b26086f325d69c36fa682465106","modified":1538123771445},{"_id":"themes/icarus/source/js/Valine.min.js","hash":"15cb71314ed92194e1137305b87aa9e122494c72","modified":1538299082941},{"_id":"themes/icarus/source/js/insight.js","hash":"f507ab7b2236349719f1af2c918f2f5c22d410c2","modified":1531408992000},{"_id":"themes/icarus/source/js/main.js","hash":"2c148f06c5799b5d7dd165c5162e780535e07a40","modified":1531408992000},{"_id":"source/_posts/hexo-创建文章/lujing.jpg","hash":"e08d55018e7afef50bd664085f701c7732933a01","modified":1538129531550},{"_id":"source/_posts/hexo-创建文章/banner.jpg","hash":"9299f035bf4bdb1c77ca7f74dad3919c473d6b1c","modified":1538127775207},{"_id":"source/_posts/hexo-创建文章/suoluetu.png","hash":"2f244d1faccdca8ed2661cecf7b0ca08799c2156","modified":1538127381617},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1531408992000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"9977603db05db02a55996e1ab3620d682a3c87b2","modified":1531408992000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"7817a75f3b8933ccf6366c1fdbce1e19912b0b35","modified":1531408992000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1531408992000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1531408992000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"d3f5a2a17b1235135c7d1f2f9bc5878ef7687e8c","modified":1531408992000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"5ea847a03ff704ab7f4752518367115ca3862890","modified":1538987384012},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1531408992000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1531408992000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"7417c254aae2b1b2132b3fb9f9efa4b32c09dd8d","modified":1531408992000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"60d5a86798010e45d8f70f49b00af2beebb64067","modified":1538967322596},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"1330bc399de3c5f41dd894cc33d0006be0309271","modified":1538300380251},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1531408992000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"1db9d1ca6402a9ad2767d2c4fe26fed4c835b1d0","modified":1538193222252},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1531408992000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"4cbc22ad02d88d4e0abcbbc192a2dccee0980215","modified":1538104402740},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"7aa8566ed33bd005ffed2659e3172d4936ca62fb","modified":1538122999671},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1531408992000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1531408992000},{"_id":"themes/icarus/source/css/images/_logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1531408992000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1531408992000},{"_id":"themes/icarus/source/css/images/favicon.ico","hash":"d2c1d45f1d1dc4919269b4b9dc15a5570ee6ac8c","modified":1538967714951},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1531408992000},{"_id":"themes/icarus/source/css/images/logo.png","hash":"8edea620d152599bf9d07730d74a3f16058179da","modified":1538018365721},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1531408992000},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1531408992000},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1531408992000},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.css","hash":"3dc468f3a5d6dcbdb977b17c2c021f751c5bf7c6","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-brands.min.css","hash":"ae33d7d508d9fb4d8cc026f74007fae27017fc80","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.min.css","hash":"ac3cc27cd41d44ed5d680541636604d0c397e5f6","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fa-solid.css","hash":"5c960e4efb31a88b1319dcf63d4806175e3cb8cd","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.css","hash":"b818fea784ea93c6cc393d545bfc5e1ec2045ff7","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/css/fontawesome.min.css","hash":"8518d72f88b376749244da2bdc96f261d9bd5645","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff2","hash":"0ec12ea1707f5bc812b627f41cccad2aff01e54b","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff","hash":"7b4a63abc8476f745f09775d7465f0a6c33daf85","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.woff2","hash":"1ba4dd60af529d1a72d0e57467c3bc0bbb728a4d","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1531408992000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1531408992000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1531408992000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1531408992000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.eot","hash":"d92c68223732a10ceffe54eecbe4ef70073e6dea","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.ttf","hash":"9b4bb228d5b132e69ff8b6b248262449879eff3e","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.woff","hash":"8b5cac7fbf1712c81d9cac19cda04e6a604eb9da","modified":1531408992000},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.eot","hash":"69aa0b829fd8562d0fb72948ce49ef201ff0ee83","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.ttf","hash":"31dc9b748b8d2bf6c3edec919e763791e037bbff","modified":1531408992000},{"_id":"themes/icarus/source/css/images/avatar.jpg","hash":"1047ff989dd0033e273f8e6f96c5c182edf0c600","modified":1538036792613},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-solid-900.svg","hash":"24a7c19c323e91705be51641e87da7d5dfea5d10","modified":1531408992000},{"_id":"themes/icarus/source/libs/font-awesome5/webfonts/fa-brands-400.svg","hash":"b07d27980b351d78f322260386450dde60d298cc","modified":1531408992000},{"_id":"public/categories/index.html","hash":"5ccfb5e9b537d5df55367c82bed59e463166d512","modified":1538993559665},{"_id":"public/tags/index.html","hash":"ae99fb386d953b2c68fb528c6b0fc8bfb08708c9","modified":1538993559665},{"_id":"public/about/index.html","hash":"9365fa305768c733619bdc7886791ce0adc6a206","modified":1538993559669},{"_id":"public/2018/10/08/递归尾调用优化/index.html","hash":"66aaaf55ef583ea00760bb2c230797cfa7258ce2","modified":1538993559669},{"_id":"public/2018/10/08/递归树结构解析/index.html","hash":"6935c2c7c1d044055b6a10e8c62c7f9d2844588d","modified":1538993559669},{"_id":"public/2018/09/29/RISE/index.html","hash":"b153460c40bcfbd7b8ea29145d026ff33931d4f3","modified":1538993559670},{"_id":"public/2018/09/27/给Hexo博客添加访问统计/index.html","hash":"06ab5cd3d7517139ced35a7cd0f7c5b3335a416a","modified":1538993559670},{"_id":"public/2018/09/27/hexo-创建文章/index.html","hash":"979e6f40032b8443d6bdeee14b4914c3c1d20578","modified":1538993559670},{"_id":"public/2018/09/25/hexo常用指令/index.html","hash":"e34bad87e85c7ecd8424e7a3665cf4dbe2d0feb1","modified":1538993559670},{"_id":"public/index.html","hash":"8a35febd1392dc92001c04d0f23da5140e0ea694","modified":1538993559670},{"_id":"public/categories/娱乐/index.html","hash":"9cc14ff58b84d063f0b265f22b4b4bfdd7b3b322","modified":1538993559670},{"_id":"public/categories/工具/index.html","hash":"cc342bcb13c92e4db8a1cfa853a003a9bd8d9026","modified":1538993559670},{"_id":"public/categories/笔记/index.html","hash":"d9b3998f0a8191398ebcd7d93005f7c5c295f680","modified":1538993559670},{"_id":"public/archives/index.html","hash":"c11285cd9c330000f720bda535f8cb7b9ac59fd4","modified":1538993559670},{"_id":"public/archives/2018/index.html","hash":"4ccfb6246fc45d6e8737a5268501ce2f9ed4044d","modified":1538993559670},{"_id":"public/archives/2018/09/index.html","hash":"637c4ceb2cab11bbc5c9ac484223f009a6f80ecf","modified":1538993559670},{"_id":"public/archives/2018/10/index.html","hash":"396a0e3ee69d9a18243149d99ff10be6a9bd1ccf","modified":1538993559670},{"_id":"public/tags/LOL/index.html","hash":"3e8ea56ce8ed87b53ac1f3d207337e6d7435cd00","modified":1538993559670},{"_id":"public/tags/video/index.html","hash":"fbbe83b7a1e46d851b7294d4769dcf0416004512","modified":1538993559670},{"_id":"public/tags/hexo/index.html","hash":"d678feb251f48d51b2fe69ab802d16c663285e2d","modified":1538993559671},{"_id":"public/tags/markdown/index.html","hash":"4a3971bb1a5a6f11cc4125339378f3d73d50fae2","modified":1538993559671},{"_id":"public/tags/前端/index.html","hash":"f03589e086511818b082f37b57f23dbe448385bc","modified":1538993559671},{"_id":"public/tags/js/index.html","hash":"bbd3ed630ce46da60981c9195d470a8f58158cc3","modified":1538993559671},{"_id":"public/tags/算法/index.html","hash":"c9ee45804784e452788294ed38f6c4bcbf2ae97a","modified":1538993559701},{"_id":"public/../assets/css/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1538993559701},{"_id":"public/css/images/favicon.ico","hash":"d2c1d45f1d1dc4919269b4b9dc15a5570ee6ac8c","modified":1538993559702},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1538993559702},{"_id":"public/css/images/logo.png","hash":"8edea620d152599bf9d07730d74a3f16058179da","modified":1538993559702},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1538993559702},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.woff2","hash":"0ec12ea1707f5bc812b627f41cccad2aff01e54b","modified":1538993559702},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.woff","hash":"7b4a63abc8476f745f09775d7465f0a6c33daf85","modified":1538993559702},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.woff2","hash":"1ba4dd60af529d1a72d0e57467c3bc0bbb728a4d","modified":1538993559702},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1538993559702},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1538993559702},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1538993559702},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1538993559702},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1538993559702},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1538993559702},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1538993559702},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1538993559702},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1538993559702},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1538993559703},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1538993559703},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1538993559704},{"_id":"public/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1538993559704},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1538993559704},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1538993559704},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1538993559704},{"_id":"public/2018/09/27/给Hexo博客添加访问统计/timg.jpg","hash":"48008426aebff3897fb41aa4319b0dc6637778ed","modified":1538993559704},{"_id":"public/2018/09/27/hexo-创建文章/lujing2.jpg","hash":"a390f5b69d7f608004d42bc55182e503bb64f7ff","modified":1538993559704},{"_id":"public/2018/09/27/hexo-创建文章/wenjian.jpg","hash":"1d46842690b5f85273dc39bfebd5157707b982a8","modified":1538993559704},{"_id":"public/2018/10/08/递归树结构解析/result.jpg","hash":"d3cc67d6e6db5ab158ddcd335be3b354f2b36a56","modified":1538993559704},{"_id":"public/../assets/js/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1538993560163},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.eot","hash":"d92c68223732a10ceffe54eecbe4ef70073e6dea","modified":1538993560167},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.ttf","hash":"9b4bb228d5b132e69ff8b6b248262449879eff3e","modified":1538993560169},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.woff","hash":"8b5cac7fbf1712c81d9cac19cda04e6a604eb9da","modified":1538993560169},{"_id":"public/2018/09/27/hexo-创建文章/lujing.jpg","hash":"e08d55018e7afef50bd664085f701c7732933a01","modified":1538993560169},{"_id":"public/js/insight.js","hash":"f507ab7b2236349719f1af2c918f2f5c22d410c2","modified":1538993560175},{"_id":"public/js/main.js","hash":"2c148f06c5799b5d7dd165c5162e780535e07a40","modified":1538993560175},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1538993560175},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1538993560175},{"_id":"public/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1538993560175},{"_id":"public/libs/font-awesome5/css/fa-brands.min.css","hash":"ae33d7d508d9fb4d8cc026f74007fae27017fc80","modified":1538993560175},{"_id":"public/libs/font-awesome5/css/fa-brands.css","hash":"3dc468f3a5d6dcbdb977b17c2c021f751c5bf7c6","modified":1538993560175},{"_id":"public/libs/font-awesome5/css/fa-solid.min.css","hash":"ac3cc27cd41d44ed5d680541636604d0c397e5f6","modified":1538993560175},{"_id":"public/libs/font-awesome5/css/fa-solid.css","hash":"5c960e4efb31a88b1319dcf63d4806175e3cb8cd","modified":1538993560175},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1538993560175},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1538993560175},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1538993560176},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1538993560176},{"_id":"public/css/style.css","hash":"077a857c16071f4b5dac3d0a2bda536e217aba16","modified":1538993560176},{"_id":"public/js/Valine.min.js","hash":"8e71573bc334c2d74654a68bdfb421e68e2b45da","modified":1538993560177},{"_id":"public/libs/font-awesome5/css/fontawesome.css","hash":"b818fea784ea93c6cc393d545bfc5e1ec2045ff7","modified":1538993560177},{"_id":"public/libs/font-awesome5/css/fontawesome.min.css","hash":"8518d72f88b376749244da2bdc96f261d9bd5645","modified":1538993560177},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1538993560177},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1538993560177},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1538993560177},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1538993560177},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1538993560177},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1538993560177},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1538993560178},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1538993560178},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1538993560178},{"_id":"public/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1538993560178},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.eot","hash":"69aa0b829fd8562d0fb72948ce49ef201ff0ee83","modified":1538993560178},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.ttf","hash":"31dc9b748b8d2bf6c3edec919e763791e037bbff","modified":1538993560178},{"_id":"public/2018/09/27/hexo-创建文章/suoluetu.png","hash":"2f244d1faccdca8ed2661cecf7b0ca08799c2156","modified":1538993560178},{"_id":"public/2018/09/27/hexo-创建文章/banner.jpg","hash":"9299f035bf4bdb1c77ca7f74dad3919c473d6b1c","modified":1538993560178},{"_id":"public/libs/font-awesome5/webfonts/fa-solid-900.svg","hash":"24a7c19c323e91705be51641e87da7d5dfea5d10","modified":1538993560199},{"_id":"public/css/images/avatar.jpg","hash":"1047ff989dd0033e273f8e6f96c5c182edf0c600","modified":1538993560231},{"_id":"public/libs/font-awesome5/webfonts/fa-brands-400.svg","hash":"b07d27980b351d78f322260386450dde60d298cc","modified":1538993560231}],"Category":[{"name":"娱乐","_id":"cjn0512170002w8uji3damkex"},{"name":"工具","_id":"cjn05121i0007w8uj7dksxha3"},{"name":"笔记","_id":"cjn05121o000hw8ujxtx85257"}],"Data":[],"Page":[{"title":"文章分类","date":"2018-09-27T06:23:33.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2018-09-27 14:23:33\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2018-09-27T10:00:27.766Z","path":"categories/index.html","comments":1,"_id":"cjn05122h000yw8uj13lduq3c","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-09-27T06:31:12.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-09-27 14:31:12\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2018-09-27T10:01:14.759Z","path":"tags/index.html","comments":1,"_id":"cjn05122i000zw8ujnoc2oio5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","date":"2018-09-26T10:22:02.000Z","_content":"\n## 友情链接\n\n杨某的博客： [https://angusyang9.github.io/](https://angusyang9.github.io/)\n刘某某的博客： [https://provenr.github.io/](https://provenr.github.io/)\n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2018-09-26 18:22:02\n---\n\n## 友情链接\n\n杨某的博客： [https://angusyang9.github.io/](https://angusyang9.github.io/)\n刘某某的博客： [https://provenr.github.io/](https://provenr.github.io/)\n","updated":"2018-10-08T01:57:01.446Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjn05122k0011w8ujsytodh8w","content":"<h2 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h2><p>杨某的博客： <a href=\"https://angusyang9.github.io/\" target=\"_blank\" rel=\"noopener\">https://angusyang9.github.io/</a><br>刘某某的博客： <a href=\"https://provenr.github.io/\" target=\"_blank\" rel=\"noopener\">https://provenr.github.io/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h2><p>杨某的博客： <a href=\"https://angusyang9.github.io/\" target=\"_blank\" rel=\"noopener\">https://angusyang9.github.io/</a><br>刘某某的博客： <a href=\"https://provenr.github.io/\" target=\"_blank\" rel=\"noopener\">https://provenr.github.io/</a></p>\n"}],"Post":[{"title":"RISE - 巅峰造极境","date":"2018-09-29T02:49:14.000Z","thumbnail":"https://gss3.bdstatic.com/84oSdTum2Q5BphGlnYG/timg?wapp&quality=80&size=b150_150&subsize=20480&cut_x=0&cut_w=0&cut_y=0&cut_h=0&sec=1369815402&srctrace&di=92d43c740baeb2f0a45cb3afc9cfa30d&wh_rate=null&src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fpic%2Fitem%2F377adab44aed2e73af4253468b01a18b87d6fa35.jpg","_content":"\n2018 英雄联盟全球总决赛主题曲\n<!--more-->\n\n**2018 英雄联盟全球总决赛主题曲**\n\n<!-- <iframe \n\tstyle=\"width: 100%; height: 28vw;\"\n\tautoPlay=\"false\"\n\tsrc=\"http://112.90.53.154/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=66DFBEE5353555E7FA4474ED17B20611024530A849765FC5B745363F19C1EB539B55E508AB3C763DAEBD9638E0D5866FDAE24CE39CCFAE307A7815C2F74EB4ED312363B76D722B6E43B277DA3465137296D3B018A859DAB9\" \n\tframeborder=0 allowfullscreen>\n</iframe> -->\n\n<video width=\"100%\" controls preload>\n    <source src=\"http://112.90.152.147/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=7B42899111C6D4E7FAF702F0BB24832AB91E3A4677DA08F78D6B520A3F82FFE245DBE80E2143686365808A9AC58089F9A5D1B2D7224CD11088ABC79C6A50492FB730B36A710D426AB81FF8D3F9CCFB8B8CCB739002533951\" type=\"video/mp4\">\n</video>\n","source":"_posts/RISE.md","raw":"---\ntitle: RISE - 巅峰造极境\ndate: 2018-09-29 10:49:14\ncategories: 娱乐\ntags: \n\t- LOL\n\t- video\nthumbnail: https://gss3.bdstatic.com/84oSdTum2Q5BphGlnYG/timg?wapp&quality=80&size=b150_150&subsize=20480&cut_x=0&cut_w=0&cut_y=0&cut_h=0&sec=1369815402&srctrace&di=92d43c740baeb2f0a45cb3afc9cfa30d&wh_rate=null&src=http%3A%2F%2Fimgsrc.baidu.com%2Fforum%2Fpic%2Fitem%2F377adab44aed2e73af4253468b01a18b87d6fa35.jpg\n---\n\n2018 英雄联盟全球总决赛主题曲\n<!--more-->\n\n**2018 英雄联盟全球总决赛主题曲**\n\n<!-- <iframe \n\tstyle=\"width: 100%; height: 28vw;\"\n\tautoPlay=\"false\"\n\tsrc=\"http://112.90.53.154/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=66DFBEE5353555E7FA4474ED17B20611024530A849765FC5B745363F19C1EB539B55E508AB3C763DAEBD9638E0D5866FDAE24CE39CCFAE307A7815C2F74EB4ED312363B76D722B6E43B277DA3465137296D3B018A859DAB9\" \n\tframeborder=0 allowfullscreen>\n</iframe> -->\n\n<video width=\"100%\" controls preload>\n    <source src=\"http://112.90.152.147/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=7B42899111C6D4E7FAF702F0BB24832AB91E3A4677DA08F78D6B520A3F82FFE245DBE80E2143686365808A9AC58089F9A5D1B2D7224CD11088ABC79C6A50492FB730B36A710D426AB81FF8D3F9CCFB8B8CCB739002533951\" type=\"video/mp4\">\n</video>\n","slug":"RISE","published":1,"updated":"2018-10-08T01:45:31.475Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn0512110000w8ujunutq8o7","content":"<p>2018 英雄联盟全球总决赛主题曲<br><a id=\"more\"></a></p>\n<p><strong>2018 英雄联盟全球总决赛主题曲</strong></p>\n<!-- <iframe \n    style=\"width: 100%; height: 28vw;\"\n    autoPlay=\"false\"\n    src=\"http://112.90.53.154/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=66DFBEE5353555E7FA4474ED17B20611024530A849765FC5B745363F19C1EB539B55E508AB3C763DAEBD9638E0D5866FDAE24CE39CCFAE307A7815C2F74EB4ED312363B76D722B6E43B277DA3465137296D3B018A859DAB9\" \n    frameborder=0 allowfullscreen>\n</iframe> -->\n<video width=\"100%\" controls preload=\"\"><br>    <source src=\"http://112.90.152.147/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=7B42899111C6D4E7FAF702F0BB24832AB91E3A4677DA08F78D6B520A3F82FFE245DBE80E2143686365808A9AC58089F9A5D1B2D7224CD11088ABC79C6A50492FB730B36A710D426AB81FF8D3F9CCFB8B8CCB739002533951\" type=\"video/mp4\"><br></video>\n","site":{"data":{}},"excerpt":"<p>2018 英雄联盟全球总决赛主题曲<br></p>","more":"<p></p>\n<p><strong>2018 英雄联盟全球总决赛主题曲</strong></p>\n<!-- <iframe \n    style=\"width: 100%; height: 28vw;\"\n    autoPlay=\"false\"\n    src=\"http://112.90.53.154/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=66DFBEE5353555E7FA4474ED17B20611024530A849765FC5B745363F19C1EB539B55E508AB3C763DAEBD9638E0D5866FDAE24CE39CCFAE307A7815C2F74EB4ED312363B76D722B6E43B277DA3465137296D3B018A859DAB9\" \n    frameborder=0 allowfullscreen>\n</iframe> -->\n<video width=\"100%\" controls preload=\"\"><br>    <source src=\"http://112.90.152.147/vcloud1049.tc.qq.com/1049_M0129600004OHJyg1ho6vG1001585158.f40.mp4?vkey=7B42899111C6D4E7FAF702F0BB24832AB91E3A4677DA08F78D6B520A3F82FFE245DBE80E2143686365808A9AC58089F9A5D1B2D7224CD11088ABC79C6A50492FB730B36A710D426AB81FF8D3F9CCFB8B8CCB739002533951\" type=\"video/mp4\"><br></video>"},{"title":"hexo 创建文章 & 文章缩略图及banner & MarkDown","date":"2018-09-27T06:29:09.000Z","comments":1,"toc":true,"thumbnail":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538137142415&di=6ea66fbfbb708b7280625217af646afb&imgtype=0&src=http%3A%2F%2Fi1.hdslb.com%2Fvideo%2F08%2F086510262d86a381a52a3651174dbd4d.jpg","<!-- banner":"/bolg/2018/09/27/hexo-创建文章/banner.jpg -->","_content":"\nhexo 文章的创建及markdown语法\n<!--more-->\n\n## hexo 创建文章\n命令行输入：\n``` bash\n$ hexo new \"new article\"\n```\n\n之后在source/_posts目录下面，多了一个new-article.md的文件。\n打开后：\n``` bash\n---\ntitle: new article\ndate: 2018-09-28 20:10:33\ntags:\n---\n\n```\n文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。下面是文章正文， 文章的正文支持markdown格式。\n**新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。**\n\n\n***\n\n### 属性\n\t文章可以拥有如下属性：\n\n|  Setting   |        Description        |    Default     |\n|------------|---------------------------|----------------|\n| layout     | layout                    | post或page     |\n| title      | 文章标题                  | 文件名         |\n| date       | 创建日期                  | 文件的创建日期 |\n| updated    | 修改日期                  | 文件的修改日期 |\n| comments   | 是否开启评论              | true           |\n| tags       | 标签                      | NULL           |\n| categories | 分类                      | NULL           |\n| permalink  | url中的名字               | 文件名         |\n| thumbnail  | 文章缩略图                | NULL           |\n| banner     | 文章缩略图&文章首部banner | NULL           |\n\n***\n\n### 分类和标签\n\n\t分类只有一个，但标签可以有多个且有两种写法如下：\n\n``` bash\n---\n...\ncategories: \"工具\"\ntags:\n    - hexo\n    - markdown\n    - 前端\n# 或者\n# tags: [hexo, markdown, 前端]\n---\n```\n***\n\n## 文章缩略图和banner\n**注： 不同主题设置可能不同，本部分只针icarus主题， 其他主题仅供参考**\n当只设置 banner 时，文章的缩略图 和 banner 将都是 banner 所设置的图片；\n当只设置 thumbnail 时， 文章只有缩略图，无banner\n当同时设置 banner 和 thumbnail 时，banner 为 banner图，thumbnail 为缩略图， 两者各自生效；\n\n\t设置图片前要在当前文章所在目录新建一个同名文件夹，用于存放图片等静态文件，如图；\n![文件目录](hexo-创建文章/wenjian.jpg)\n\t或者修改配置文件\\_config.yml\n``` bash\npost_asset_folder: true # 创建时生成静态资源文件夹\n```\n此时创建新文章时会自动在同级目录下生成同名文件夹用于存放静态文件，不同的主题可通过 thumbnail 和 banner 两个属性来设置缩略图和banner\n\n### 文章缩略图设置：\n![文章缩略图](hexo-创建文章/suoluetu.png)\n``` bash\n---\n...\nthumbnail: https://...        # 此处为图片地址\n---\n```\n\n***\n\n### 文章banner设置：\n![文章banner](hexo-创建文章/banner.jpg)\n``` bash\n---\n...\nbanner: https://...           # 此处为图片地址\n---\n```\n***注： 若引用本地图片时，需要加上路径前缀，如下图：***\n![路径](hexo-创建文章/lujing.jpg)\n![目录](hexo-创建文章/lujing2.jpg)\n\t\n\t则引用路径为：\n``` bash\nbanner: /bolg/2018/09/27/hexo-创建文章/banner.jpg\n```\n\n***\n\n## MarkDown 语法\n\n### 斜体和粗体\n``` bash\n*这是斜体* 或 _这也是斜体_ \n**这是粗体**\n***这是加粗斜体***\n~~这是删除线~~\n```\n\n\t效果\n*这是斜体* 或 _这也是斜体_ \n**这是粗体**\n***这是加粗斜体***\n~~这是删除线~~\n\n***\n\n### 分级标题\n``` bash\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n\n<!-- \t效果\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题 -->\n\n***\n\n### 超链接\n``` bash\n行内形式：[我的博客](https://zhangjichengcc.github.io/bolg/)\n参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]\n[1]:https://kevinpu.github.io/\n[2]:http://www.jianshu.com/\n自动链接：我的博客地址<https://zhangjichengcc.github.io/bolg/>\n```\n\t\n\t效果\n行内形式：[我的博客](https://zhangjichengcc.github.io/bolg/)\n参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]\n[1]:https://zhangjichengcc.github.io/bolg/\n[2]:https://zhangjichengcc.github.io/\n自动链接：我的博客地址<https://zhangjichengcc.github.io/bolg/>\n\n\n***\n\n### 列表\n#### 无序列表：\n``` bash\n* 无序列表项1\n+ 无序列表项2\n- 无序列表项3\n```\n\n\t效果\n* 无序列表项1\n+ 无序列表项2\n- 无序列表项3\n\n#### 有序列表\n``` bash\n1.有序列表项1\n2.有序列表项2\n3.有序列表项3\n```\n\n\t效果\n1.有序列表项1\n2.有序列表项2\n3.有序列表项3\n\n***\n\n### 插入图片\n``` bash\n![文字说明](/images/...)\n```\n\n***\n\n### 表格\n``` bash\n| 表头1|表头2|表头3|表头4\n|-| :- | :-: | -: |\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n```\n\n\t效果\n| 表头1|表头2|表头3|表头4\n|-| :- | :-: | -: |\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n\n***\n\n### code\n``` bash\n``` bash\n...code 主体\n```\n\n\t效果\n``` bash\n...code 主体\n```\n\n### 引用\n``` bash\n>这是引用\n这是引用\n这是引用\n>>不！我才是引用\n```\n\t效果\n\n>这是引用\n这是引用\n这是引用\n>>不！我才是引用","source":"_posts/hexo-创建文章.md","raw":"---\ntitle: hexo 创建文章 & 文章缩略图及banner & MarkDown\ndate: 2018-09-27 14:29:09\ncomments: true\ntoc: true\ncategories: \"工具\"\nthumbnail: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538137142415&di=6ea66fbfbb708b7280625217af646afb&imgtype=0&src=http%3A%2F%2Fi1.hdslb.com%2Fvideo%2F08%2F086510262d86a381a52a3651174dbd4d.jpg\n<!-- banner: /bolg/2018/09/27/hexo-创建文章/banner.jpg -->\n\ntags: [hexo, markdown, 前端]\n---\n\nhexo 文章的创建及markdown语法\n<!--more-->\n\n## hexo 创建文章\n命令行输入：\n``` bash\n$ hexo new \"new article\"\n```\n\n之后在source/_posts目录下面，多了一个new-article.md的文件。\n打开后：\n``` bash\n---\ntitle: new article\ndate: 2018-09-28 20:10:33\ntags:\n---\n\n```\n文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。下面是文章正文， 文章的正文支持markdown格式。\n**新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。**\n\n\n***\n\n### 属性\n\t文章可以拥有如下属性：\n\n|  Setting   |        Description        |    Default     |\n|------------|---------------------------|----------------|\n| layout     | layout                    | post或page     |\n| title      | 文章标题                  | 文件名         |\n| date       | 创建日期                  | 文件的创建日期 |\n| updated    | 修改日期                  | 文件的修改日期 |\n| comments   | 是否开启评论              | true           |\n| tags       | 标签                      | NULL           |\n| categories | 分类                      | NULL           |\n| permalink  | url中的名字               | 文件名         |\n| thumbnail  | 文章缩略图                | NULL           |\n| banner     | 文章缩略图&文章首部banner | NULL           |\n\n***\n\n### 分类和标签\n\n\t分类只有一个，但标签可以有多个且有两种写法如下：\n\n``` bash\n---\n...\ncategories: \"工具\"\ntags:\n    - hexo\n    - markdown\n    - 前端\n# 或者\n# tags: [hexo, markdown, 前端]\n---\n```\n***\n\n## 文章缩略图和banner\n**注： 不同主题设置可能不同，本部分只针icarus主题， 其他主题仅供参考**\n当只设置 banner 时，文章的缩略图 和 banner 将都是 banner 所设置的图片；\n当只设置 thumbnail 时， 文章只有缩略图，无banner\n当同时设置 banner 和 thumbnail 时，banner 为 banner图，thumbnail 为缩略图， 两者各自生效；\n\n\t设置图片前要在当前文章所在目录新建一个同名文件夹，用于存放图片等静态文件，如图；\n![文件目录](hexo-创建文章/wenjian.jpg)\n\t或者修改配置文件\\_config.yml\n``` bash\npost_asset_folder: true # 创建时生成静态资源文件夹\n```\n此时创建新文章时会自动在同级目录下生成同名文件夹用于存放静态文件，不同的主题可通过 thumbnail 和 banner 两个属性来设置缩略图和banner\n\n### 文章缩略图设置：\n![文章缩略图](hexo-创建文章/suoluetu.png)\n``` bash\n---\n...\nthumbnail: https://...        # 此处为图片地址\n---\n```\n\n***\n\n### 文章banner设置：\n![文章banner](hexo-创建文章/banner.jpg)\n``` bash\n---\n...\nbanner: https://...           # 此处为图片地址\n---\n```\n***注： 若引用本地图片时，需要加上路径前缀，如下图：***\n![路径](hexo-创建文章/lujing.jpg)\n![目录](hexo-创建文章/lujing2.jpg)\n\t\n\t则引用路径为：\n``` bash\nbanner: /bolg/2018/09/27/hexo-创建文章/banner.jpg\n```\n\n***\n\n## MarkDown 语法\n\n### 斜体和粗体\n``` bash\n*这是斜体* 或 _这也是斜体_ \n**这是粗体**\n***这是加粗斜体***\n~~这是删除线~~\n```\n\n\t效果\n*这是斜体* 或 _这也是斜体_ \n**这是粗体**\n***这是加粗斜体***\n~~这是删除线~~\n\n***\n\n### 分级标题\n``` bash\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n\n<!-- \t效果\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题 -->\n\n***\n\n### 超链接\n``` bash\n行内形式：[我的博客](https://zhangjichengcc.github.io/bolg/)\n参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]\n[1]:https://kevinpu.github.io/\n[2]:http://www.jianshu.com/\n自动链接：我的博客地址<https://zhangjichengcc.github.io/bolg/>\n```\n\t\n\t效果\n行内形式：[我的博客](https://zhangjichengcc.github.io/bolg/)\n参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]\n[1]:https://zhangjichengcc.github.io/bolg/\n[2]:https://zhangjichengcc.github.io/\n自动链接：我的博客地址<https://zhangjichengcc.github.io/bolg/>\n\n\n***\n\n### 列表\n#### 无序列表：\n``` bash\n* 无序列表项1\n+ 无序列表项2\n- 无序列表项3\n```\n\n\t效果\n* 无序列表项1\n+ 无序列表项2\n- 无序列表项3\n\n#### 有序列表\n``` bash\n1.有序列表项1\n2.有序列表项2\n3.有序列表项3\n```\n\n\t效果\n1.有序列表项1\n2.有序列表项2\n3.有序列表项3\n\n***\n\n### 插入图片\n``` bash\n![文字说明](/images/...)\n```\n\n***\n\n### 表格\n``` bash\n| 表头1|表头2|表头3|表头4\n|-| :- | :-: | -: |\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n```\n\n\t效果\n| 表头1|表头2|表头3|表头4\n|-| :- | :-: | -: |\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n|默认左对齐|左对齐|居中对齐|右对齐|\n\n***\n\n### code\n``` bash\n``` bash\n...code 主体\n```\n\n\t效果\n``` bash\n...code 主体\n```\n\n### 引用\n``` bash\n>这是引用\n这是引用\n这是引用\n>>不！我才是引用\n```\n\t效果\n\n>这是引用\n这是引用\n这是引用\n>>不！我才是引用","slug":"hexo-创建文章","published":1,"updated":"2018-10-08T02:53:53.485Z","layout":"post","photos":[],"link":"","_id":"cjn0512150001w8uj9pa18m9j","content":"<p>hexo 文章的创建及markdown语法<br><a id=\"more\"></a></p>\n<h2 id=\"hexo-创建文章\"><a href=\"#hexo-创建文章\" class=\"headerlink\" title=\"hexo 创建文章\"></a>hexo 创建文章</h2><p>命令行输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"new article\"</span></span><br></pre></td></tr></table></figure></p>\n<p>之后在source/_posts目录下面，多了一个new-article.md的文件。<br>打开后：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: new article</span><br><span class=\"line\">date: 2018-09-28 20:10:33</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p>文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。下面是文章正文， 文章的正文支持markdown格式。<br><strong>新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。</strong></p>\n<hr>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><pre><code>文章可以拥有如下属性：\n</code></pre><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>layout</td>\n<td>post或page</td>\n</tr>\n<tr>\n<td>title</td>\n<td>文章标题</td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>date</td>\n<td>创建日期</td>\n<td>文件的创建日期</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>修改日期</td>\n<td>文件的修改日期</td>\n</tr>\n<tr>\n<td>comments</td>\n<td>是否开启评论</td>\n<td>true</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>标签</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>分类</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>permalink</td>\n<td>url中的名字</td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>thumbnail</td>\n<td>文章缩略图</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>banner</td>\n<td>文章缩略图&amp;文章首部banner</td>\n<td>NULL</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"分类和标签\"><a href=\"#分类和标签\" class=\"headerlink\" title=\"分类和标签\"></a>分类和标签</h3><pre><code>分类只有一个，但标签可以有多个且有两种写法如下：\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">...</span><br><span class=\"line\">categories: <span class=\"string\">\"工具\"</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">    - hexo</span><br><span class=\"line\">    - markdown</span><br><span class=\"line\">    - 前端</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\"><span class=\"comment\"># tags: [hexo, markdown, 前端]</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"文章缩略图和banner\"><a href=\"#文章缩略图和banner\" class=\"headerlink\" title=\"文章缩略图和banner\"></a>文章缩略图和banner</h2><p><strong>注： 不同主题设置可能不同，本部分只针icarus主题， 其他主题仅供参考</strong><br>当只设置 banner 时，文章的缩略图 和 banner 将都是 banner 所设置的图片；<br>当只设置 thumbnail 时， 文章只有缩略图，无banner<br>当同时设置 banner 和 thumbnail 时，banner 为 banner图，thumbnail 为缩略图， 两者各自生效；</p>\n<pre><code>设置图片前要在当前文章所在目录新建一个同名文件夹，用于存放图片等静态文件，如图；\n</code></pre><p><img src=\"/bolg/2018/09/27/hexo-创建文章/wenjian.jpg\" alt=\"文件目录\"><br>    或者修改配置文件_config.yml<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span> <span class=\"comment\"># 创建时生成静态资源文件夹</span></span><br></pre></td></tr></table></figure></p>\n<p>此时创建新文章时会自动在同级目录下生成同名文件夹用于存放静态文件，不同的主题可通过 thumbnail 和 banner 两个属性来设置缩略图和banner</p>\n<h3 id=\"文章缩略图设置：\"><a href=\"#文章缩略图设置：\" class=\"headerlink\" title=\"文章缩略图设置：\"></a>文章缩略图设置：</h3><p><img src=\"/bolg/2018/09/27/hexo-创建文章/suoluetu.png\" alt=\"文章缩略图\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">...</span><br><span class=\"line\">thumbnail: https://...        <span class=\"comment\"># 此处为图片地址</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"文章banner设置：\"><a href=\"#文章banner设置：\" class=\"headerlink\" title=\"文章banner设置：\"></a>文章banner设置：</h3><p><img src=\"/bolg/2018/09/27/hexo-创建文章/banner.jpg\" alt=\"文章banner\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">...</span><br><span class=\"line\">banner: https://...           <span class=\"comment\"># 此处为图片地址</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>注： 若引用本地图片时，需要加上路径前缀，如下图：</em></strong><br><img src=\"/bolg/2018/09/27/hexo-创建文章/lujing.jpg\" alt=\"路径\"><br><img src=\"/bolg/2018/09/27/hexo-创建文章/lujing2.jpg\" alt=\"目录\"></p>\n<pre><code>则引用路径为：\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">banner: /bolg/2018/09/27/hexo-创建文章/banner.jpg</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"MarkDown-语法\"><a href=\"#MarkDown-语法\" class=\"headerlink\" title=\"MarkDown 语法\"></a>MarkDown 语法</h2><h3 id=\"斜体和粗体\"><a href=\"#斜体和粗体\" class=\"headerlink\" title=\"斜体和粗体\"></a>斜体和粗体</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是斜体* 或 _这也是斜体_ </span><br><span class=\"line\">**这是粗体**</span><br><span class=\"line\">***这是加粗斜体***</span><br><span class=\"line\">~~这是删除线~~</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><p><em>这是斜体</em> 或 <em>这也是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p>\n<hr>\n<h3 id=\"分级标题\"><a href=\"#分级标题\" class=\"headerlink\" title=\"分级标题\"></a>分级标题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一级标题</span></span><br><span class=\"line\"><span class=\"comment\">## 二级标题</span></span><br><span class=\"line\"><span class=\"comment\">### 三级标题</span></span><br><span class=\"line\"><span class=\"comment\">#### 四级标题</span></span><br><span class=\"line\"><span class=\"comment\">##### 五级标题</span></span><br><span class=\"line\"><span class=\"comment\">###### 六级标题</span></span><br></pre></td></tr></table></figure>\n<!--     效果\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题 -->\n<hr>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">行内形式：[我的博客](https://zhangjichengcc.github.io/bolg/)</span><br><span class=\"line\">参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]</span><br><span class=\"line\">[1]:https://kevinpu.github.io/</span><br><span class=\"line\">[2]:http://www.jianshu.com/</span><br><span class=\"line\">自动链接：我的博客地址&lt;https://zhangjichengcc.github.io/bolg/&gt;</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><p>行内形式：<a href=\"https://zhangjichengcc.github.io/bolg/\">我的博客</a><br>参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]<br>[1]:<a href=\"https://zhangjichengcc.github.io/bolg/\">https://zhangjichengcc.github.io/bolg/</a><br>[2]:<a href=\"https://zhangjichengcc.github.io/\">https://zhangjichengcc.github.io/</a><br>自动链接：我的博客地址<a href=\"https://zhangjichengcc.github.io/bolg/\">https://zhangjichengcc.github.io/bolg/</a></p>\n<hr>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><h4 id=\"无序列表：\"><a href=\"#无序列表：\" class=\"headerlink\" title=\"无序列表：\"></a>无序列表：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 无序列表项1</span><br><span class=\"line\">+ 无序列表项2</span><br><span class=\"line\">- 无序列表项3</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><ul>\n<li>无序列表项1</li>\n</ul>\n<ul>\n<li>无序列表项2</li>\n</ul>\n<ul>\n<li>无序列表项3</li>\n</ul>\n<h4 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.有序列表项1</span><br><span class=\"line\">2.有序列表项2</span><br><span class=\"line\">3.有序列表项3</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><p>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p>\n<hr>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![文字说明](/images/...)</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 表头1|表头2|表头3|表头4</span><br><span class=\"line\">|-| :- | :-: | -: |</span><br><span class=\"line\">|默认左对齐|左对齐|居中对齐|右对齐|</span><br><span class=\"line\">|默认左对齐|左对齐|居中对齐|右对齐|</span><br><span class=\"line\">|默认左对齐|左对齐|居中对齐|右对齐|</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><table>\n<thead>\n<tr>\n<th>表头1</th>\n<th style=\"text-align:left\">表头2</th>\n<th style=\"text-align:center\">表头3</th>\n<th style=\"text-align:right\">表头4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对齐</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对齐</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对齐</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">``` bash</span><br><span class=\"line\">...code 主体</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...code 主体</span><br></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用</span><br><span class=\"line\">这是引用</span><br><span class=\"line\">这是引用</span><br><span class=\"line\">&gt;&gt;不！我才是引用</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><blockquote>\n<p>这是引用<br>这是引用<br>这是引用</p>\n<blockquote>\n<p>不！我才是引用</p>\n</blockquote>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>hexo 文章的创建及markdown语法<br></p>","more":"<p></p>\n<h2 id=\"hexo-创建文章\"><a href=\"#hexo-创建文章\" class=\"headerlink\" title=\"hexo 创建文章\"></a>hexo 创建文章</h2><p>命令行输入：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"new article\"</span></span><br></pre></td></tr></table></figure></p>\n<p>之后在source/_posts目录下面，多了一个new-article.md的文件。<br>打开后：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: new article</span><br><span class=\"line\">date: 2018-09-28 20:10:33</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p>文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。下面是文章正文， 文章的正文支持markdown格式。<br><strong>新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。</strong></p>\n<hr>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><pre><code>文章可以拥有如下属性：\n</code></pre><table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>layout</td>\n<td>post或page</td>\n</tr>\n<tr>\n<td>title</td>\n<td>文章标题</td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>date</td>\n<td>创建日期</td>\n<td>文件的创建日期</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>修改日期</td>\n<td>文件的修改日期</td>\n</tr>\n<tr>\n<td>comments</td>\n<td>是否开启评论</td>\n<td>true</td>\n</tr>\n<tr>\n<td>tags</td>\n<td>标签</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>categories</td>\n<td>分类</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>permalink</td>\n<td>url中的名字</td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>thumbnail</td>\n<td>文章缩略图</td>\n<td>NULL</td>\n</tr>\n<tr>\n<td>banner</td>\n<td>文章缩略图&amp;文章首部banner</td>\n<td>NULL</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"分类和标签\"><a href=\"#分类和标签\" class=\"headerlink\" title=\"分类和标签\"></a>分类和标签</h3><pre><code>分类只有一个，但标签可以有多个且有两种写法如下：\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">...</span><br><span class=\"line\">categories: <span class=\"string\">\"工具\"</span></span><br><span class=\"line\">tags:</span><br><span class=\"line\">    - hexo</span><br><span class=\"line\">    - markdown</span><br><span class=\"line\">    - 前端</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\"><span class=\"comment\"># tags: [hexo, markdown, 前端]</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"文章缩略图和banner\"><a href=\"#文章缩略图和banner\" class=\"headerlink\" title=\"文章缩略图和banner\"></a>文章缩略图和banner</h2><p><strong>注： 不同主题设置可能不同，本部分只针icarus主题， 其他主题仅供参考</strong><br>当只设置 banner 时，文章的缩略图 和 banner 将都是 banner 所设置的图片；<br>当只设置 thumbnail 时， 文章只有缩略图，无banner<br>当同时设置 banner 和 thumbnail 时，banner 为 banner图，thumbnail 为缩略图， 两者各自生效；</p>\n<pre><code>设置图片前要在当前文章所在目录新建一个同名文件夹，用于存放图片等静态文件，如图；\n</code></pre><p><img src=\"/bolg/2018/09/27/hexo-创建文章/wenjian.jpg\" alt=\"文件目录\"><br>    或者修改配置文件_config.yml<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_asset_folder: <span class=\"literal\">true</span> <span class=\"comment\"># 创建时生成静态资源文件夹</span></span><br></pre></td></tr></table></figure></p>\n<p>此时创建新文章时会自动在同级目录下生成同名文件夹用于存放静态文件，不同的主题可通过 thumbnail 和 banner 两个属性来设置缩略图和banner</p>\n<h3 id=\"文章缩略图设置：\"><a href=\"#文章缩略图设置：\" class=\"headerlink\" title=\"文章缩略图设置：\"></a>文章缩略图设置：</h3><p><img src=\"/bolg/2018/09/27/hexo-创建文章/suoluetu.png\" alt=\"文章缩略图\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">...</span><br><span class=\"line\">thumbnail: https://...        <span class=\"comment\"># 此处为图片地址</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"文章banner设置：\"><a href=\"#文章banner设置：\" class=\"headerlink\" title=\"文章banner设置：\"></a>文章banner设置：</h3><p><img src=\"/bolg/2018/09/27/hexo-创建文章/banner.jpg\" alt=\"文章banner\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">...</span><br><span class=\"line\">banner: https://...           <span class=\"comment\"># 此处为图片地址</span></span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>注： 若引用本地图片时，需要加上路径前缀，如下图：</em></strong><br><img src=\"/bolg/2018/09/27/hexo-创建文章/lujing.jpg\" alt=\"路径\"><br><img src=\"/bolg/2018/09/27/hexo-创建文章/lujing2.jpg\" alt=\"目录\"></p>\n<pre><code>则引用路径为：\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">banner: /bolg/2018/09/27/hexo-创建文章/banner.jpg</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"MarkDown-语法\"><a href=\"#MarkDown-语法\" class=\"headerlink\" title=\"MarkDown 语法\"></a>MarkDown 语法</h2><h3 id=\"斜体和粗体\"><a href=\"#斜体和粗体\" class=\"headerlink\" title=\"斜体和粗体\"></a>斜体和粗体</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是斜体* 或 _这也是斜体_ </span><br><span class=\"line\">**这是粗体**</span><br><span class=\"line\">***这是加粗斜体***</span><br><span class=\"line\">~~这是删除线~~</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><p><em>这是斜体</em> 或 <em>这也是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p>\n<hr>\n<h3 id=\"分级标题\"><a href=\"#分级标题\" class=\"headerlink\" title=\"分级标题\"></a>分级标题</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 一级标题</span></span><br><span class=\"line\"><span class=\"comment\">## 二级标题</span></span><br><span class=\"line\"><span class=\"comment\">### 三级标题</span></span><br><span class=\"line\"><span class=\"comment\">#### 四级标题</span></span><br><span class=\"line\"><span class=\"comment\">##### 五级标题</span></span><br><span class=\"line\"><span class=\"comment\">###### 六级标题</span></span><br></pre></td></tr></table></figure>\n<!--     效果\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题 -->\n<hr>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">行内形式：[我的博客](https://zhangjichengcc.github.io/bolg/)</span><br><span class=\"line\">参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]</span><br><span class=\"line\">[1]:https://kevinpu.github.io/</span><br><span class=\"line\">[2]:http://www.jianshu.com/</span><br><span class=\"line\">自动链接：我的博客地址&lt;https://zhangjichengcc.github.io/bolg/&gt;</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><p>行内形式：<a href=\"https://zhangjichengcc.github.io/bolg/\">我的博客</a><br>参考形式：[我的博客][1]，有一个很好的平台-[GitHub][2]<br>[1]:<a href=\"https://zhangjichengcc.github.io/bolg/\">https://zhangjichengcc.github.io/bolg/</a><br>[2]:<a href=\"https://zhangjichengcc.github.io/\">https://zhangjichengcc.github.io/</a><br>自动链接：我的博客地址<a href=\"https://zhangjichengcc.github.io/bolg/\">https://zhangjichengcc.github.io/bolg/</a></p>\n<hr>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><h4 id=\"无序列表：\"><a href=\"#无序列表：\" class=\"headerlink\" title=\"无序列表：\"></a>无序列表：</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 无序列表项1</span><br><span class=\"line\">+ 无序列表项2</span><br><span class=\"line\">- 无序列表项3</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><ul>\n<li>无序列表项1</li>\n</ul>\n<ul>\n<li>无序列表项2</li>\n</ul>\n<ul>\n<li>无序列表项3</li>\n</ul>\n<h4 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.有序列表项1</span><br><span class=\"line\">2.有序列表项2</span><br><span class=\"line\">3.有序列表项3</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><p>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p>\n<hr>\n<h3 id=\"插入图片\"><a href=\"#插入图片\" class=\"headerlink\" title=\"插入图片\"></a>插入图片</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![文字说明](/images/...)</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 表头1|表头2|表头3|表头4</span><br><span class=\"line\">|-| :- | :-: | -: |</span><br><span class=\"line\">|默认左对齐|左对齐|居中对齐|右对齐|</span><br><span class=\"line\">|默认左对齐|左对齐|居中对齐|右对齐|</span><br><span class=\"line\">|默认左对齐|左对齐|居中对齐|右对齐|</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><table>\n<thead>\n<tr>\n<th>表头1</th>\n<th style=\"text-align:left\">表头2</th>\n<th style=\"text-align:center\">表头3</th>\n<th style=\"text-align:right\">表头4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对齐</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对齐</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对齐</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">``` bash</span><br><span class=\"line\">...code 主体</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...code 主体</span><br></pre></td></tr></table></figure>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是引用</span><br><span class=\"line\">这是引用</span><br><span class=\"line\">这是引用</span><br><span class=\"line\">&gt;&gt;不！我才是引用</span><br></pre></td></tr></table></figure>\n<pre><code>效果\n</code></pre><blockquote>\n<p>这是引用<br>这是引用<br>这是引用</p>\n<blockquote>\n<p>不！我才是引用</p>\n</blockquote>\n</blockquote>"},{"title":"hexo常用指令","comments":1,"toc":true,"banner":"https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538053636652&di=0db3bc68fbdb79830a01281e006c9200&imgtype=jpg&src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D3996696336%2C4120219149%26fm%3D214%26gp%3D0.jpg","description":"生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。","_content":"\nWelcome to [Hexo](https://hexo.io/)! \n<!--more-->\n\n## 开始使用 Install\n\n``` bash\n$ npm install hexo -g     # 安装  \n$ npm update hexo -g      # 升级  \n$ hexo init             # 初始化 \n```\n\n## 快速开始 Quick Start\n\n### 启动本地服务（查看效果）\n\n``` bash\n$ hexo server / $ hexo s\n```\n#### 服务器设置\n``` bash\n$ hexo server                        #Hexo 会监视文件变动并自动更新，您无须重启服务器。\n$ hexo server -s                     #静态模式\n$ hexo server -p 5000                #更改端口\n$ hexo server -i 192.168.1.1         #自定义 IP\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate / $ hexo g           #使用 Hexo 生成静态文件快速而且简单\n$ hexo generate --watch              #监视文件变动\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 文章发布\nhexo 支持在github等平台上一键发布\n\n``` bash\n$ hexo deploy / $ hexo d\n```\n\n### 清空缓存及静态文件\n\n``` bash\n$ hexo clean\n```\n\n### 完成后部署\n\n``` bash\n$ hexo generate --deploy / hexo g --d\n$ hexo deploy --generate / hexo d --g\n```\n\n\n### 创建模板\n|   参数   |            描述            |\n|----------|----------------------------|\n| layout   | 布局                       |\n| data     | 创建时间                   |\n| title    | 标题                       |\n\n\n| layout：参数 |     描述     |     存储路径    |             说明            |\n|--------------|--------------|-----------------|-----------------------------|\n| post         | 文章（默认） | source/\\_posts   | 可以直接发布                |\n| draft        | 草稿         | source          | 在source下新建一个文件夹    |\n| page         | 页面         | source/\\_drafts | 新建文件将保存到 \\_drafts中 |\n\n\n``` bash\n$ hexo new [layout] <title>\n```\n#### 创建文章\n``` bash\n$ hexo new <title>\n$ hexo new \"postName\" #新建文章\n```\n#### 创建页面\n``` bash\n$ hexo new page <pageName>\n$ hexo new page \"pageName\" #新建页面\n```\n### 创建/发布草稿\n\n#### 创建草稿\n*会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。*\n\n``` bash\n$ hexo new draft \"new draft\"\n```\n\n*如果你希望强行预览草稿，更改配置文件 (_config.yml)：*\n\n``` bash\nrender_drafts: true\n```\n*或者，如下方式启动 server：*\n``` bash\n$ hexo server --drafts\n```\n\n#### 发布草稿\n\n``` bash\n$ hexo pushlish [layout] <title>\n$ hexo publish / $ hexo p\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n\n### 指令组合执行 &\n\n通常开发测试要依次执行 hexo clean => hexo generate => hexo server, 我们可以通过指令组合执行来完成\n\n``` bash\nhexo clean & hexo g & hexo s\n```\n\n\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hexo常用指令.md","raw":"---\ntitle: hexo常用指令\ncomments: true\ntoc: true\ncategories: \"工具\"\nbanner: https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1538053636652&di=0db3bc68fbdb79830a01281e006c9200&imgtype=jpg&src=http%3A%2F%2Fimg1.imgtn.bdimg.com%2Fit%2Fu%3D3996696336%2C4120219149%26fm%3D214%26gp%3D0.jpg\ntags:\n    - hexo\ndescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。\n---\n\nWelcome to [Hexo](https://hexo.io/)! \n<!--more-->\n\n## 开始使用 Install\n\n``` bash\n$ npm install hexo -g     # 安装  \n$ npm update hexo -g      # 升级  \n$ hexo init             # 初始化 \n```\n\n## 快速开始 Quick Start\n\n### 启动本地服务（查看效果）\n\n``` bash\n$ hexo server / $ hexo s\n```\n#### 服务器设置\n``` bash\n$ hexo server                        #Hexo 会监视文件变动并自动更新，您无须重启服务器。\n$ hexo server -s                     #静态模式\n$ hexo server -p 5000                #更改端口\n$ hexo server -i 192.168.1.1         #自定义 IP\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate / $ hexo g           #使用 Hexo 生成静态文件快速而且简单\n$ hexo generate --watch              #监视文件变动\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 文章发布\nhexo 支持在github等平台上一键发布\n\n``` bash\n$ hexo deploy / $ hexo d\n```\n\n### 清空缓存及静态文件\n\n``` bash\n$ hexo clean\n```\n\n### 完成后部署\n\n``` bash\n$ hexo generate --deploy / hexo g --d\n$ hexo deploy --generate / hexo d --g\n```\n\n\n### 创建模板\n|   参数   |            描述            |\n|----------|----------------------------|\n| layout   | 布局                       |\n| data     | 创建时间                   |\n| title    | 标题                       |\n\n\n| layout：参数 |     描述     |     存储路径    |             说明            |\n|--------------|--------------|-----------------|-----------------------------|\n| post         | 文章（默认） | source/\\_posts   | 可以直接发布                |\n| draft        | 草稿         | source          | 在source下新建一个文件夹    |\n| page         | 页面         | source/\\_drafts | 新建文件将保存到 \\_drafts中 |\n\n\n``` bash\n$ hexo new [layout] <title>\n```\n#### 创建文章\n``` bash\n$ hexo new <title>\n$ hexo new \"postName\" #新建文章\n```\n#### 创建页面\n``` bash\n$ hexo new page <pageName>\n$ hexo new page \"pageName\" #新建页面\n```\n### 创建/发布草稿\n\n#### 创建草稿\n*会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。*\n\n``` bash\n$ hexo new draft \"new draft\"\n```\n\n*如果你希望强行预览草稿，更改配置文件 (_config.yml)：*\n\n``` bash\nrender_drafts: true\n```\n*或者，如下方式启动 server：*\n``` bash\n$ hexo server --drafts\n```\n\n#### 发布草稿\n\n``` bash\n$ hexo pushlish [layout] <title>\n$ hexo publish / $ hexo p\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n\n### 指令组合执行 &\n\n通常开发测试要依次执行 hexo clean => hexo generate => hexo server, 我们可以通过指令组合执行来完成\n\n``` bash\nhexo clean & hexo g & hexo s\n```\n\n\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hexo常用指令","published":1,"date":"2018-09-25T07:22:27.762Z","updated":"2018-09-29T03:22:32.833Z","layout":"post","photos":[],"link":"","_id":"cjn0512190004w8uj63t3oj35","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>!<br><a id=\"more\"></a></p>\n<h2 id=\"开始使用-Install\"><a href=\"#开始使用-Install\" class=\"headerlink\" title=\"开始使用 Install\"></a>开始使用 Install</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo -g     <span class=\"comment\"># 安装  </span></span><br><span class=\"line\">$ npm update hexo -g      <span class=\"comment\"># 升级  </span></span><br><span class=\"line\">$ hexo init             <span class=\"comment\"># 初始化</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"快速开始-Quick-Start\"><a href=\"#快速开始-Quick-Start\" class=\"headerlink\" title=\"快速开始 Quick Start\"></a>快速开始 Quick Start</h2><h3 id=\"启动本地服务（查看效果）\"><a href=\"#启动本地服务（查看效果）\" class=\"headerlink\" title=\"启动本地服务（查看效果）\"></a>启动本地服务（查看效果）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server / $ hexo s</span><br></pre></td></tr></table></figure>\n<h4 id=\"服务器设置\"><a href=\"#服务器设置\" class=\"headerlink\" title=\"服务器设置\"></a>服务器设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server                        <span class=\"comment\">#Hexo 会监视文件变动并自动更新，您无须重启服务器。</span></span><br><span class=\"line\">$ hexo server -s                     <span class=\"comment\">#静态模式</span></span><br><span class=\"line\">$ hexo server -p 5000                <span class=\"comment\">#更改端口</span></span><br><span class=\"line\">$ hexo server -i 192.168.1.1         <span class=\"comment\">#自定义 IP</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate / $ hexo g           <span class=\"comment\">#使用 Hexo 生成静态文件快速而且简单</span></span><br><span class=\"line\">$ hexo generate --watch              <span class=\"comment\">#监视文件变动</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"文章发布\"><a href=\"#文章发布\" class=\"headerlink\" title=\"文章发布\"></a>文章发布</h3><p>hexo 支持在github等平台上一键发布</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy / $ hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"清空缓存及静态文件\"><a href=\"#清空缓存及静态文件\" class=\"headerlink\" title=\"清空缓存及静态文件\"></a>清空缓存及静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h3 id=\"完成后部署\"><a href=\"#完成后部署\" class=\"headerlink\" title=\"完成后部署\"></a>完成后部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy / hexo g --d</span><br><span class=\"line\">$ hexo deploy --generate / hexo d --g</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建模板\"><a href=\"#创建模板\" class=\"headerlink\" title=\"创建模板\"></a>创建模板</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>data</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>layout：参数</th>\n<th>描述</th>\n<th>存储路径</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>文章（默认）</td>\n<td>source/_posts</td>\n<td>可以直接发布</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>草稿</td>\n<td>source</td>\n<td>在source下新建一个文件夹</td>\n</tr>\n<tr>\n<td>page</td>\n<td>页面</td>\n<td>source/_drafts</td>\n<td>新建文件将保存到 _drafts中</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建文章\"><a href=\"#创建文章\" class=\"headerlink\" title=\"创建文章\"></a>创建文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &lt;title&gt;</span><br><span class=\"line\">$ hexo new <span class=\"string\">\"postName\"</span> <span class=\"comment\">#新建文章</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建页面\"><a href=\"#创建页面\" class=\"headerlink\" title=\"创建页面\"></a>创建页面</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page &lt;pageName&gt;</span><br><span class=\"line\">$ hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\">#新建页面</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-发布草稿\"><a href=\"#创建-发布草稿\" class=\"headerlink\" title=\"创建/发布草稿\"></a>创建/发布草稿</h3><h4 id=\"创建草稿\"><a href=\"#创建草稿\" class=\"headerlink\" title=\"创建草稿\"></a>创建草稿</h4><p><em>会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new draft <span class=\"string\">\"new draft\"</span></span><br></pre></td></tr></table></figure>\n<p><em>如果你希望强行预览草稿，更改配置文件 (_config.yml)：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render_drafts: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><em>或者，如下方式启动 server：</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server --drafts</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"发布草稿\"><a href=\"#发布草稿\" class=\"headerlink\" title=\"发布草稿\"></a>发布草稿</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo pushlish [layout] &lt;title&gt;</span><br><span class=\"line\">$ hexo publish / $ hexo p</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"指令组合执行-amp\"><a href=\"#指令组合执行-amp\" class=\"headerlink\" title=\"指令组合执行 &amp;\"></a>指令组合执行 &amp;</h3><p>通常开发测试要依次执行 hexo clean =&gt; hexo generate =&gt; hexo server, 我们可以通过指令组合执行来完成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp; hexo g &amp; hexo s</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>!<br></p>","more":"<p></p>\n<h2 id=\"开始使用-Install\"><a href=\"#开始使用-Install\" class=\"headerlink\" title=\"开始使用 Install\"></a>开始使用 Install</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo -g     <span class=\"comment\"># 安装  </span></span><br><span class=\"line\">$ npm update hexo -g      <span class=\"comment\"># 升级  </span></span><br><span class=\"line\">$ hexo init             <span class=\"comment\"># 初始化</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"快速开始-Quick-Start\"><a href=\"#快速开始-Quick-Start\" class=\"headerlink\" title=\"快速开始 Quick Start\"></a>快速开始 Quick Start</h2><h3 id=\"启动本地服务（查看效果）\"><a href=\"#启动本地服务（查看效果）\" class=\"headerlink\" title=\"启动本地服务（查看效果）\"></a>启动本地服务（查看效果）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server / $ hexo s</span><br></pre></td></tr></table></figure>\n<h4 id=\"服务器设置\"><a href=\"#服务器设置\" class=\"headerlink\" title=\"服务器设置\"></a>服务器设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server                        <span class=\"comment\">#Hexo 会监视文件变动并自动更新，您无须重启服务器。</span></span><br><span class=\"line\">$ hexo server -s                     <span class=\"comment\">#静态模式</span></span><br><span class=\"line\">$ hexo server -p 5000                <span class=\"comment\">#更改端口</span></span><br><span class=\"line\">$ hexo server -i 192.168.1.1         <span class=\"comment\">#自定义 IP</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate / $ hexo g           <span class=\"comment\">#使用 Hexo 生成静态文件快速而且简单</span></span><br><span class=\"line\">$ hexo generate --watch              <span class=\"comment\">#监视文件变动</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"文章发布\"><a href=\"#文章发布\" class=\"headerlink\" title=\"文章发布\"></a>文章发布</h3><p>hexo 支持在github等平台上一键发布</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy / $ hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"清空缓存及静态文件\"><a href=\"#清空缓存及静态文件\" class=\"headerlink\" title=\"清空缓存及静态文件\"></a>清空缓存及静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<h3 id=\"完成后部署\"><a href=\"#完成后部署\" class=\"headerlink\" title=\"完成后部署\"></a>完成后部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate --deploy / hexo g --d</span><br><span class=\"line\">$ hexo deploy --generate / hexo d --g</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建模板\"><a href=\"#创建模板\" class=\"headerlink\" title=\"创建模板\"></a>创建模板</h3><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>layout</td>\n<td>布局</td>\n</tr>\n<tr>\n<td>data</td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>layout：参数</th>\n<th>描述</th>\n<th>存储路径</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>post</td>\n<td>文章（默认）</td>\n<td>source/_posts</td>\n<td>可以直接发布</td>\n</tr>\n<tr>\n<td>draft</td>\n<td>草稿</td>\n<td>source</td>\n<td>在source下新建一个文件夹</td>\n</tr>\n<tr>\n<td>page</td>\n<td>页面</td>\n<td>source/_drafts</td>\n<td>新建文件将保存到 _drafts中</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建文章\"><a href=\"#创建文章\" class=\"headerlink\" title=\"创建文章\"></a>创建文章</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &lt;title&gt;</span><br><span class=\"line\">$ hexo new <span class=\"string\">\"postName\"</span> <span class=\"comment\">#新建文章</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建页面\"><a href=\"#创建页面\" class=\"headerlink\" title=\"创建页面\"></a>创建页面</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page &lt;pageName&gt;</span><br><span class=\"line\">$ hexo new page <span class=\"string\">\"pageName\"</span> <span class=\"comment\">#新建页面</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建-发布草稿\"><a href=\"#创建-发布草稿\" class=\"headerlink\" title=\"创建/发布草稿\"></a>创建/发布草稿</h3><h4 id=\"创建草稿\"><a href=\"#创建草稿\" class=\"headerlink\" title=\"创建草稿\"></a>创建草稿</h4><p><em>会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new draft <span class=\"string\">\"new draft\"</span></span><br></pre></td></tr></table></figure>\n<p><em>如果你希望强行预览草稿，更改配置文件 (_config.yml)：</em></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render_drafts: <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><em>或者，如下方式启动 server：</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server --drafts</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"发布草稿\"><a href=\"#发布草稿\" class=\"headerlink\" title=\"发布草稿\"></a>发布草稿</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo pushlish [layout] &lt;title&gt;</span><br><span class=\"line\">$ hexo publish / $ hexo p</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"指令组合执行-amp\"><a href=\"#指令组合执行-amp\" class=\"headerlink\" title=\"指令组合执行 &amp;\"></a>指令组合执行 &amp;</h3><p>通常开发测试要依次执行 hexo clean =&gt; hexo generate =&gt; hexo server, 我们可以通过指令组合执行来完成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp; hexo g &amp; hexo s</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"给Hexo博客添加访问统计","date":"2018-09-27T08:35:58.000Z","thumbnail":"http://busuanzi.ibruce.info/images/garlic.png","_content":"导语： 引入不蒜子为你的博客添加访问量\n<!--more-->\n### 引入不蒜子\n``` bash\n<script async src=\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n```\n这段代码可以写在footer.ejs里或者header.ejs里或者layout.ejs里\n\n### 添加站点访问量\n通常站点的总访问量会显示在footer的位置，所以我们可以在footer.ejs里加上如下标签：\n``` bash\n<span id=\"busuanzi_container_site_uv\"> \n  本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次\n</span>\n```\n计算访问量的方法有两种：\n算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。\n算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。\n我用的是uv的方式，大家自行选择即可。\n\n### 添加文章访问量\n文章的访问量显示在文章里面，所以在article.ejs里加上文章访问量的标签：\n``` bash\n<span id=\"busuanzi_container_page_pv\">\n   本文总阅读量<span id=\"busuanzi_value_page_pv\"></span>次\n</span>\n```\n\n参考 : [不蒜子](http://busuanzi.ibruce.info/)\n","source":"_posts/给Hexo博客添加访问统计.md","raw":"---\ntitle: 给Hexo博客添加访问统计\ndate: 2018-09-27 16:35:58\ncategories: 工具\ntags: hexo\nthumbnail: http://busuanzi.ibruce.info/images/garlic.png\n---\n导语： 引入不蒜子为你的博客添加访问量\n<!--more-->\n### 引入不蒜子\n``` bash\n<script async src=\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"></script>\n```\n这段代码可以写在footer.ejs里或者header.ejs里或者layout.ejs里\n\n### 添加站点访问量\n通常站点的总访问量会显示在footer的位置，所以我们可以在footer.ejs里加上如下标签：\n``` bash\n<span id=\"busuanzi_container_site_uv\"> \n  本站访客数<span id=\"busuanzi_value_site_uv\"></span>人次\n</span>\n```\n计算访问量的方法有两种：\n算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。\n算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。\n我用的是uv的方式，大家自行选择即可。\n\n### 添加文章访问量\n文章的访问量显示在文章里面，所以在article.ejs里加上文章访问量的标签：\n``` bash\n<span id=\"busuanzi_container_page_pv\">\n   本文总阅读量<span id=\"busuanzi_value_page_pv\"></span>次\n</span>\n```\n\n参考 : [不蒜子](http://busuanzi.ibruce.info/)\n","slug":"给Hexo博客添加访问统计","published":1,"updated":"2018-10-08T01:47:17.448Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn05121c0005w8uj8jzjnrt4","content":"<p>导语： 引入不蒜子为你的博客添加访问量<br><a id=\"more\"></a></p>\n<h3 id=\"引入不蒜子\"><a href=\"#引入不蒜子\" class=\"headerlink\" title=\"引入不蒜子\"></a>引入不蒜子</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script async src=<span class=\"string\">\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>这段代码可以写在footer.ejs里或者header.ejs里或者layout.ejs里</p>\n<h3 id=\"添加站点访问量\"><a href=\"#添加站点访问量\" class=\"headerlink\" title=\"添加站点访问量\"></a>添加站点访问量</h3><p>通常站点的总访问量会显示在footer的位置，所以我们可以在footer.ejs里加上如下标签：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=<span class=\"string\">\"busuanzi_container_site_uv\"</span>&gt; </span><br><span class=\"line\">  本站访客数&lt;span id=<span class=\"string\">\"busuanzi_value_site_uv\"</span>&gt;&lt;/span&gt;人次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>\n<p>计算访问量的方法有两种：<br>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。<br>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。<br>我用的是uv的方式，大家自行选择即可。</p>\n<h3 id=\"添加文章访问量\"><a href=\"#添加文章访问量\" class=\"headerlink\" title=\"添加文章访问量\"></a>添加文章访问量</h3><p>文章的访问量显示在文章里面，所以在article.ejs里加上文章访问量的标签：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=<span class=\"string\">\"busuanzi_container_page_pv\"</span>&gt;</span><br><span class=\"line\">   本文总阅读量&lt;span id=<span class=\"string\">\"busuanzi_value_page_pv\"</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>\n<p>参考 : <a href=\"http://busuanzi.ibruce.info/\" target=\"_blank\" rel=\"noopener\">不蒜子</a></p>\n","site":{"data":{}},"excerpt":"<p>导语： 引入不蒜子为你的博客添加访问量<br></p>","more":"<p></p>\n<h3 id=\"引入不蒜子\"><a href=\"#引入不蒜子\" class=\"headerlink\" title=\"引入不蒜子\"></a>引入不蒜子</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script async src=<span class=\"string\">\"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>这段代码可以写在footer.ejs里或者header.ejs里或者layout.ejs里</p>\n<h3 id=\"添加站点访问量\"><a href=\"#添加站点访问量\" class=\"headerlink\" title=\"添加站点访问量\"></a>添加站点访问量</h3><p>通常站点的总访问量会显示在footer的位置，所以我们可以在footer.ejs里加上如下标签：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=<span class=\"string\">\"busuanzi_container_site_uv\"</span>&gt; </span><br><span class=\"line\">  本站访客数&lt;span id=<span class=\"string\">\"busuanzi_value_site_uv\"</span>&gt;&lt;/span&gt;人次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>\n<p>计算访问量的方法有两种：<br>算法a：pv的方式，单个用户连续点击n篇文章，记录n次访问量。<br>算法b：uv的方式，单个用户连续点击n篇文章，只记录1次访客数。<br>我用的是uv的方式，大家自行选择即可。</p>\n<h3 id=\"添加文章访问量\"><a href=\"#添加文章访问量\" class=\"headerlink\" title=\"添加文章访问量\"></a>添加文章访问量</h3><p>文章的访问量显示在文章里面，所以在article.ejs里加上文章访问量的标签：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span id=<span class=\"string\">\"busuanzi_container_page_pv\"</span>&gt;</span><br><span class=\"line\">   本文总阅读量&lt;span id=<span class=\"string\">\"busuanzi_value_page_pv\"</span>&gt;&lt;/span&gt;次</span><br><span class=\"line\">&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>\n<p>参考 : <a href=\"http://busuanzi.ibruce.info/\" target=\"_blank\" rel=\"noopener\">不蒜子</a></p>"},{"title":"递归尾调用优化","date":"2018-10-08T09:19:48.000Z","banner":"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2447683882,2644927629&fm=26&gp=0.jpg","_content":"\n>尾调用常用于函数递归的优化，递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误...\n\n<!-- more -->\n\n### 什么是尾调用？\n\n>尾调用（Tail Call）是函数式编程的一个重要概念，本身非常简单，一句话就能说清楚，就是指某个函数的最后一步是调用另一个函数。\n\n\n``` bash\nfunction f(x){\n  return g(x);\n}\n```\n\n上面代码中，函数`f`的最后一步是调用函数`g`，这就叫尾调用。\n以下三种情况，都不属于尾调用。\n\n``` bash\n// 情况一\nfunction f(x){\n  let y = g(x);\n  return y;\n}\n\n// 情况二\nfunction f(x){\n  return g(x) + 1;\n}\n\n// 情况三\nfunction f(x){\n  g(x);\n}\n```\n\n上面代码中\n情况一: 是调用函数g之后，还有赋值操作，所以不属于尾调用，即使语义完全一样;\n情况二: 属于调用后还有操作，即使写在一行内;\n情况三: 等同于下面的代码;\n\n``` bash\nfunction f(x){\n  g(x);\n  return undefined;\n}\n```\n\n尾调用不一定出现在函数尾部，只要是最后一步操作即可。\n\n``` bash\nfunction f(x) {\n  if (x > 0) {\n    return m(x)\n  }\n  return n(x);\n}\n```\n\n上面代码中，函数`m`和`n`都属于尾调用，因为它们都是函数`f`的最后一步操作。\n\n### 尾调用优化\n\n>尾调用之所以与其他调用不同，就在于它的特殊的调用位置。\n\n>我们知道，函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数A的内部调用函数B，那么在A的调用帧上方，还会形成一个B的调用帧。等到B运行结束，将结果返回到A，B的调用帧才会消失。如果函数B内部还调用函数C，那就还有一个C的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（call stack）。\n尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。\n\n``` bash\nfunction f() {\n  let m = 1;\n  let n = 2;\n  return g(m + n);\n}\nf();\n\n// 等同于\nfunction f() {\n  return g(3);\n}\nf();\n\n// 等同于\ng(3);\n```\n\n上面代码中，如果函数g不是尾调用，函数`f`就需要保存内部变量`m`和`n`的值、`g`的调用位置等信息。但由于调用`g`之后，函数`f`就结束了，所以执行到最后一步，完全可以删除`f(x)`的调用帧，只保留`g(3)`的调用帧。\n\n>这就叫做“尾调用优化”（Tail call optimization），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。\n\n注意，只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行“尾调用优化”。\n\n``` bahs\nfunction addOne(a){\n  var one = 1;\n  function inner(b){\n    return b + one;\n  }\n  return inner(a);\n}\n```\n\n上面的函数不会进行尾调用优化，因为内层函数`inner`用到了外层函数`addOne`的内部变量`one`。\n\n\n### 尾递归\n\n>函数调用自身，称为递归。如果尾调用自身，就称为尾递归。\n\n递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误。\n\n``` bash\nfunction factorial(n) {\n  if (n === 1) return 1;\n  return n * factorial(n - 1);\n}\n\nfactorial(5) // 120\n```\n上面代码是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。\n\n如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。\n\n``` bash\nfunction factorial(n, total) {\n  if (n === 1) return total;\n  return factorial(n - 1, n * total);\n}\n\nfactorial(5, 1) // 120\n```\n\n还有一个比较著名的例子，就是计算 Fibonacci 数列，也能充分说明尾递归优化的重要性。\n非尾递归的 Fibonacci 数列实现如下。\n\n``` bash\nfunction Fibonacci (n) {\n  if ( n <= 1 ) {return 1};\n\n  return Fibonacci(n - 1) + Fibonacci(n - 2);\n}\n\nFibonacci(10)  // 89\nFibonacci(100) // 堆栈溢出\nFibonacci(500) // 堆栈溢出\n```\n\n尾递归优化过的 Fibonacci 数列实现如下。\n\n``` bash\nfunction Fibonacci2 (n , ac1 = 1 , ac2 = 1) {\n  if( n <= 1 ) {return ac2};\n\n  return Fibonacci2 (n - 1, ac2, ac1 + ac2);\n}\n\nFibonacci2(100)   // 573147844013817200000\nFibonacci2(1000)  // 7.0330367711422765e+208\nFibonacci2(10000) // Infinity\n```\n\n>由此可见，“尾调用优化”对递归操作意义重大，所以一些函数式编程语言将其写入了语言规格。ES6 是如此，第一次明确规定，所有 ECMAScript 的实现，都必须部署“尾调用优化”。这就是说，ES6 中只要使用尾递归，就不会发生栈溢出，相对节省内存。\n\n参考文献：[ECMAScript 6 入门 - 阮一峰][1]\n[1]:http://es6.ruanyifeng.com/","source":"_posts/递归尾调用优化.md","raw":"---\ntitle: '递归尾调用优化'\ndate: 2018-10-08 17:19:48\nbanner: https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2447683882,2644927629&fm=26&gp=0.jpg\ncategories: '笔记'\ntags:\n\t- js\n\t- 算法\n---\n\n>尾调用常用于函数递归的优化，递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误...\n\n<!-- more -->\n\n### 什么是尾调用？\n\n>尾调用（Tail Call）是函数式编程的一个重要概念，本身非常简单，一句话就能说清楚，就是指某个函数的最后一步是调用另一个函数。\n\n\n``` bash\nfunction f(x){\n  return g(x);\n}\n```\n\n上面代码中，函数`f`的最后一步是调用函数`g`，这就叫尾调用。\n以下三种情况，都不属于尾调用。\n\n``` bash\n// 情况一\nfunction f(x){\n  let y = g(x);\n  return y;\n}\n\n// 情况二\nfunction f(x){\n  return g(x) + 1;\n}\n\n// 情况三\nfunction f(x){\n  g(x);\n}\n```\n\n上面代码中\n情况一: 是调用函数g之后，还有赋值操作，所以不属于尾调用，即使语义完全一样;\n情况二: 属于调用后还有操作，即使写在一行内;\n情况三: 等同于下面的代码;\n\n``` bash\nfunction f(x){\n  g(x);\n  return undefined;\n}\n```\n\n尾调用不一定出现在函数尾部，只要是最后一步操作即可。\n\n``` bash\nfunction f(x) {\n  if (x > 0) {\n    return m(x)\n  }\n  return n(x);\n}\n```\n\n上面代码中，函数`m`和`n`都属于尾调用，因为它们都是函数`f`的最后一步操作。\n\n### 尾调用优化\n\n>尾调用之所以与其他调用不同，就在于它的特殊的调用位置。\n\n>我们知道，函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数A的内部调用函数B，那么在A的调用帧上方，还会形成一个B的调用帧。等到B运行结束，将结果返回到A，B的调用帧才会消失。如果函数B内部还调用函数C，那就还有一个C的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（call stack）。\n尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。\n\n``` bash\nfunction f() {\n  let m = 1;\n  let n = 2;\n  return g(m + n);\n}\nf();\n\n// 等同于\nfunction f() {\n  return g(3);\n}\nf();\n\n// 等同于\ng(3);\n```\n\n上面代码中，如果函数g不是尾调用，函数`f`就需要保存内部变量`m`和`n`的值、`g`的调用位置等信息。但由于调用`g`之后，函数`f`就结束了，所以执行到最后一步，完全可以删除`f(x)`的调用帧，只保留`g(3)`的调用帧。\n\n>这就叫做“尾调用优化”（Tail call optimization），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。\n\n注意，只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行“尾调用优化”。\n\n``` bahs\nfunction addOne(a){\n  var one = 1;\n  function inner(b){\n    return b + one;\n  }\n  return inner(a);\n}\n```\n\n上面的函数不会进行尾调用优化，因为内层函数`inner`用到了外层函数`addOne`的内部变量`one`。\n\n\n### 尾递归\n\n>函数调用自身，称为递归。如果尾调用自身，就称为尾递归。\n\n递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误。\n\n``` bash\nfunction factorial(n) {\n  if (n === 1) return 1;\n  return n * factorial(n - 1);\n}\n\nfactorial(5) // 120\n```\n上面代码是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。\n\n如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。\n\n``` bash\nfunction factorial(n, total) {\n  if (n === 1) return total;\n  return factorial(n - 1, n * total);\n}\n\nfactorial(5, 1) // 120\n```\n\n还有一个比较著名的例子，就是计算 Fibonacci 数列，也能充分说明尾递归优化的重要性。\n非尾递归的 Fibonacci 数列实现如下。\n\n``` bash\nfunction Fibonacci (n) {\n  if ( n <= 1 ) {return 1};\n\n  return Fibonacci(n - 1) + Fibonacci(n - 2);\n}\n\nFibonacci(10)  // 89\nFibonacci(100) // 堆栈溢出\nFibonacci(500) // 堆栈溢出\n```\n\n尾递归优化过的 Fibonacci 数列实现如下。\n\n``` bash\nfunction Fibonacci2 (n , ac1 = 1 , ac2 = 1) {\n  if( n <= 1 ) {return ac2};\n\n  return Fibonacci2 (n - 1, ac2, ac1 + ac2);\n}\n\nFibonacci2(100)   // 573147844013817200000\nFibonacci2(1000)  // 7.0330367711422765e+208\nFibonacci2(10000) // Infinity\n```\n\n>由此可见，“尾调用优化”对递归操作意义重大，所以一些函数式编程语言将其写入了语言规格。ES6 是如此，第一次明确规定，所有 ECMAScript 的实现，都必须部署“尾调用优化”。这就是说，ES6 中只要使用尾递归，就不会发生栈溢出，相对节省内存。\n\n参考文献：[ECMAScript 6 入门 - 阮一峰][1]\n[1]:http://es6.ruanyifeng.com/","slug":"递归尾调用优化","published":1,"updated":"2018-10-08T10:12:26.560Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn05121h0006w8ujx7hp3tna","content":"<blockquote>\n<p>尾调用常用于函数递归的优化，递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误…</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"什么是尾调用？\"><a href=\"#什么是尾调用？\" class=\"headerlink\" title=\"什么是尾调用？\"></a>什么是尾调用？</h3><blockquote>\n<p>尾调用（Tail Call）是函数式编程的一个重要概念，本身非常简单，一句话就能说清楚，就是指某个函数的最后一步是调用另一个函数。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，函数<code>f</code>的最后一步是调用函数<code>g</code>，这就叫尾调用。<br>以下三种情况，都不属于尾调用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 情况一</span><br><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> y = g(x);</span><br><span class=\"line\">  <span class=\"built_in\">return</span> y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 情况二</span><br><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(x) + 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 情况三</span><br><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  g(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中<br>情况一: 是调用函数g之后，还有赋值操作，所以不属于尾调用，即使语义完全一样;<br>情况二: 属于调用后还有操作，即使写在一行内;<br>情况三: 等同于下面的代码;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  g(x);</span><br><span class=\"line\">  <span class=\"built_in\">return</span> undefined;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尾调用不一定出现在函数尾部，只要是最后一步操作即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> f(x) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (x &gt; 0) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> m(x)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> n(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，函数<code>m</code>和<code>n</code>都属于尾调用，因为它们都是函数<code>f</code>的最后一步操作。</p>\n<h3 id=\"尾调用优化\"><a href=\"#尾调用优化\" class=\"headerlink\" title=\"尾调用优化\"></a>尾调用优化</h3><blockquote>\n<p>尾调用之所以与其他调用不同，就在于它的特殊的调用位置。</p>\n</blockquote>\n<blockquote>\n<p>我们知道，函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数A的内部调用函数B，那么在A的调用帧上方，还会形成一个B的调用帧。等到B运行结束，将结果返回到A，B的调用帧才会消失。如果函数B内部还调用函数C，那就还有一个C的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（call stack）。<br>尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">f</span></span>() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> m = 1;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> n = 2;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(m + n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">f();</span><br><span class=\"line\"></span><br><span class=\"line\">// 等同于</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">f</span></span>() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">f();</span><br><span class=\"line\"></span><br><span class=\"line\">// 等同于</span><br><span class=\"line\">g(3);</span><br></pre></td></tr></table></figure>\n<p>上面代码中，如果函数g不是尾调用，函数<code>f</code>就需要保存内部变量<code>m</code>和<code>n</code>的值、<code>g</code>的调用位置等信息。但由于调用<code>g</code>之后，函数<code>f</code>就结束了，所以执行到最后一步，完全可以删除<code>f(x)</code>的调用帧，只保留<code>g(3)</code>的调用帧。</p>\n<blockquote>\n<p>这就叫做“尾调用优化”（Tail call optimization），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。</p>\n</blockquote>\n<p>注意，只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行“尾调用优化”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function addOne(a)&#123;</span><br><span class=\"line\">  var one = 1;</span><br><span class=\"line\">  function inner(b)&#123;</span><br><span class=\"line\">    return b + one;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return inner(a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的函数不会进行尾调用优化，因为内层函数<code>inner</code>用到了外层函数<code>addOne</code>的内部变量<code>one</code>。</p>\n<h3 id=\"尾递归\"><a href=\"#尾递归\" class=\"headerlink\" title=\"尾递归\"></a>尾递归</h3><blockquote>\n<p>函数调用自身，称为递归。如果尾调用自身，就称为尾递归。</p>\n</blockquote>\n<p>递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> factorial(n) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n === 1) <span class=\"built_in\">return</span> 1;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> n * factorial(n - 1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">factorial(5) // 120</span><br></pre></td></tr></table></figure>\n<p>上面代码是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。</p>\n<p>如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> factorial(n, total) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n === 1) <span class=\"built_in\">return</span> total;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> factorial(n - 1, n * total);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">factorial(5, 1) // 120</span><br></pre></td></tr></table></figure>\n<p>还有一个比较著名的例子，就是计算 Fibonacci 数列，也能充分说明尾递归优化的重要性。<br>非尾递归的 Fibonacci 数列实现如下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> Fibonacci (n) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( n &lt;= 1 ) &#123;<span class=\"built_in\">return</span> 1&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">return</span> Fibonacci(n - 1) + Fibonacci(n - 2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Fibonacci(10)  // 89</span><br><span class=\"line\">Fibonacci(100) // 堆栈溢出</span><br><span class=\"line\">Fibonacci(500) // 堆栈溢出</span><br></pre></td></tr></table></figure>\n<p>尾递归优化过的 Fibonacci 数列实现如下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> Fibonacci2 (n , ac1 = 1 , ac2 = 1) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>( n &lt;= 1 ) &#123;<span class=\"built_in\">return</span> ac2&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">return</span> Fibonacci2 (n - 1, ac2, ac1 + ac2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Fibonacci2(100)   // 573147844013817200000</span><br><span class=\"line\">Fibonacci2(1000)  // 7.0330367711422765e+208</span><br><span class=\"line\">Fibonacci2(10000) // Infinity</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>由此可见，“尾调用优化”对递归操作意义重大，所以一些函数式编程语言将其写入了语言规格。ES6 是如此，第一次明确规定，所有 ECMAScript 的实现，都必须部署“尾调用优化”。这就是说，ES6 中只要使用尾递归，就不会发生栈溢出，相对节省内存。</p>\n</blockquote>\n<p>参考文献：[ECMAScript 6 入门 - 阮一峰][1]<br>[1]:<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/</a></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>尾调用常用于函数递归的优化，递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误…</p>\n</blockquote>","more":"<h3 id=\"什么是尾调用？\"><a href=\"#什么是尾调用？\" class=\"headerlink\" title=\"什么是尾调用？\"></a>什么是尾调用？</h3><blockquote>\n<p>尾调用（Tail Call）是函数式编程的一个重要概念，本身非常简单，一句话就能说清楚，就是指某个函数的最后一步是调用另一个函数。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，函数<code>f</code>的最后一步是调用函数<code>g</code>，这就叫尾调用。<br>以下三种情况，都不属于尾调用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 情况一</span><br><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> y = g(x);</span><br><span class=\"line\">  <span class=\"built_in\">return</span> y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 情况二</span><br><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(x) + 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 情况三</span><br><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  g(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中<br>情况一: 是调用函数g之后，还有赋值操作，所以不属于尾调用，即使语义完全一样;<br>情况二: 属于调用后还有操作，即使写在一行内;<br>情况三: 等同于下面的代码;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> f(x)&#123;</span><br><span class=\"line\">  g(x);</span><br><span class=\"line\">  <span class=\"built_in\">return</span> undefined;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>尾调用不一定出现在函数尾部，只要是最后一步操作即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> f(x) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (x &gt; 0) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> m(x)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> n(x);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面代码中，函数<code>m</code>和<code>n</code>都属于尾调用，因为它们都是函数<code>f</code>的最后一步操作。</p>\n<h3 id=\"尾调用优化\"><a href=\"#尾调用优化\" class=\"headerlink\" title=\"尾调用优化\"></a>尾调用优化</h3><blockquote>\n<p>尾调用之所以与其他调用不同，就在于它的特殊的调用位置。</p>\n</blockquote>\n<blockquote>\n<p>我们知道，函数调用会在内存形成一个“调用记录”，又称“调用帧”（call frame），保存调用位置和内部变量等信息。如果在函数A的内部调用函数B，那么在A的调用帧上方，还会形成一个B的调用帧。等到B运行结束，将结果返回到A，B的调用帧才会消失。如果函数B内部还调用函数C，那就还有一个C的调用帧，以此类推。所有的调用帧，就形成一个“调用栈”（call stack）。<br>尾调用由于是函数的最后一步操作，所以不需要保留外层函数的调用帧，因为调用位置、内部变量等信息都不会再用到了，只要直接用内层函数的调用帧，取代外层函数的调用帧就可以了。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">f</span></span>() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> m = 1;</span><br><span class=\"line\">  <span class=\"built_in\">let</span> n = 2;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(m + n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">f();</span><br><span class=\"line\"></span><br><span class=\"line\">// 等同于</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">f</span></span>() &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> g(3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">f();</span><br><span class=\"line\"></span><br><span class=\"line\">// 等同于</span><br><span class=\"line\">g(3);</span><br></pre></td></tr></table></figure>\n<p>上面代码中，如果函数g不是尾调用，函数<code>f</code>就需要保存内部变量<code>m</code>和<code>n</code>的值、<code>g</code>的调用位置等信息。但由于调用<code>g</code>之后，函数<code>f</code>就结束了，所以执行到最后一步，完全可以删除<code>f(x)</code>的调用帧，只保留<code>g(3)</code>的调用帧。</p>\n<blockquote>\n<p>这就叫做“尾调用优化”（Tail call optimization），即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。</p>\n</blockquote>\n<p>注意，只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行“尾调用优化”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function addOne(a)&#123;</span><br><span class=\"line\">  var one = 1;</span><br><span class=\"line\">  function inner(b)&#123;</span><br><span class=\"line\">    return b + one;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return inner(a);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的函数不会进行尾调用优化，因为内层函数<code>inner</code>用到了外层函数<code>addOne</code>的内部变量<code>one</code>。</p>\n<h3 id=\"尾递归\"><a href=\"#尾递归\" class=\"headerlink\" title=\"尾递归\"></a>尾递归</h3><blockquote>\n<p>函数调用自身，称为递归。如果尾调用自身，就称为尾递归。</p>\n</blockquote>\n<p>递归非常耗费内存，因为需要同时保存成千上百个调用帧，很容易发生“栈溢出”错误（stack overflow）。但对于尾递归来说，由于只存在一个调用帧，所以永远不会发生“栈溢出”错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> factorial(n) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n === 1) <span class=\"built_in\">return</span> 1;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> n * factorial(n - 1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">factorial(5) // 120</span><br></pre></td></tr></table></figure>\n<p>上面代码是一个阶乘函数，计算n的阶乘，最多需要保存n个调用记录，复杂度 O(n) 。</p>\n<p>如果改写成尾递归，只保留一个调用记录，复杂度 O(1) 。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> factorial(n, total) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n === 1) <span class=\"built_in\">return</span> total;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> factorial(n - 1, n * total);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">factorial(5, 1) // 120</span><br></pre></td></tr></table></figure>\n<p>还有一个比较著名的例子，就是计算 Fibonacci 数列，也能充分说明尾递归优化的重要性。<br>非尾递归的 Fibonacci 数列实现如下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> Fibonacci (n) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( n &lt;= 1 ) &#123;<span class=\"built_in\">return</span> 1&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">return</span> Fibonacci(n - 1) + Fibonacci(n - 2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Fibonacci(10)  // 89</span><br><span class=\"line\">Fibonacci(100) // 堆栈溢出</span><br><span class=\"line\">Fibonacci(500) // 堆栈溢出</span><br></pre></td></tr></table></figure>\n<p>尾递归优化过的 Fibonacci 数列实现如下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> Fibonacci2 (n , ac1 = 1 , ac2 = 1) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>( n &lt;= 1 ) &#123;<span class=\"built_in\">return</span> ac2&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">return</span> Fibonacci2 (n - 1, ac2, ac1 + ac2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Fibonacci2(100)   // 573147844013817200000</span><br><span class=\"line\">Fibonacci2(1000)  // 7.0330367711422765e+208</span><br><span class=\"line\">Fibonacci2(10000) // Infinity</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>由此可见，“尾调用优化”对递归操作意义重大，所以一些函数式编程语言将其写入了语言规格。ES6 是如此，第一次明确规定，所有 ECMAScript 的实现，都必须部署“尾调用优化”。这就是说，ES6 中只要使用尾递归，就不会发生栈溢出，相对节省内存。</p>\n</blockquote>\n<p>参考文献：[ECMAScript 6 入门 - 阮一峰][1]<br>[1]:<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/</a></p>"},{"title":"递归树结构解析","date":"2018-10-08T03:40:07.000Z","_content":"\n用递归的方式将树结构从根到叶子节点解析成数组\n<!-- more -->\n\n从后台获取树结构的 json 数据，渲染成树图结构\n由于项目需求，需要将所有可行链路展示出来，于是采用递归方式将树结构解析为数组\n算法不算复杂，但用很多细节需要注意，很有价值，故记录下来以备以后查看\n\n``` bash\n数据结构如下：                \n     a                       \n    / \\     \n   b   e     \n  / \\   \\     \n c   d   f     \n```\n\n``` bash\nconst obj = {\n  val: 'a',\n  children: [\n    { val: 'b', children: [\n        { val: 'c', children: [] },\n        { val: 'd', children: [] },\n      ],\n    },\n    { val: 'e', children: [\n        { val: 'f', }\n      ],\n    },\n  ],\n};\n```\n\n废话不多说，直接上代码\n``` bash\n// 法一\nconst initArr = (obj) => {\n  const newArr = [];                                        // 定义空数组，用于每次遍历结束后存储结果\n  (function travel(item, arr){                              // 回调函数，立即执行 item为每次执行处理的对象，arr为叠加数组\n    if (item.children && item.children.length) {            // 判断是否存在子元素，存在则遍历子元素递归调用\n      for (let i = 0; i < item.children.length; i += 1) {\n        travel(item.children[i], arr.concat(item));         // 递归调用，并对数组 arr 进行叠加，注：此处不能用push，因此处是作为参数用来传递的，push 返回的是数组长度\n      }\n    } else {                                                // 若不存在子元素，则一条链路遍历结束，将叠加数组添加到 newArr 中\n      newArr.push(arr.concat(item));                        // 注意此处要记得将本次递归的 item 添加到arr中\n    }\n  }(obj, []));                                              // 初始递归调用，此时的 item 为传入的树结构， 叠加数组arr为空\n  return newArr;\n}\n```\n\n``` bash\n// 法二\nconst initArr = (obj) => {\n  const newArr = [];\n  (function travel(item, arr){\n    const itemArr = [...arr];                      // ES6 深拷贝数组，此处是让每次travel都有一个独立的itemArr, 防止公用全局arr叠加时造成污染\n    itemArr.push(item);                            // 由于 itemArr 为每次递归独立的叠加数组，故直接 push 改变数组本身即可\n    if (item.children && item.children.length) {\n      for (let i in item.children) {\n        travel(data.children[i], itemArr);\n      }\n    } else {\n      newArr.push(itemArr);\n    }\n  })(obj, [])\n  return newArr;\n}\n```\n\n`\n结果如下图\n`\n![递归解析树结构](递归树结构解析/result.jpg)\n\n","source":"_posts/递归树结构解析.md","raw":"---\ntitle: '递归树结构解析'\ndate: 2018-10-08 11:40:07\ncategories: \"笔记\"\ntags: [js, 算法, 前端]\n---\n\n用递归的方式将树结构从根到叶子节点解析成数组\n<!-- more -->\n\n从后台获取树结构的 json 数据，渲染成树图结构\n由于项目需求，需要将所有可行链路展示出来，于是采用递归方式将树结构解析为数组\n算法不算复杂，但用很多细节需要注意，很有价值，故记录下来以备以后查看\n\n``` bash\n数据结构如下：                \n     a                       \n    / \\     \n   b   e     \n  / \\   \\     \n c   d   f     \n```\n\n``` bash\nconst obj = {\n  val: 'a',\n  children: [\n    { val: 'b', children: [\n        { val: 'c', children: [] },\n        { val: 'd', children: [] },\n      ],\n    },\n    { val: 'e', children: [\n        { val: 'f', }\n      ],\n    },\n  ],\n};\n```\n\n废话不多说，直接上代码\n``` bash\n// 法一\nconst initArr = (obj) => {\n  const newArr = [];                                        // 定义空数组，用于每次遍历结束后存储结果\n  (function travel(item, arr){                              // 回调函数，立即执行 item为每次执行处理的对象，arr为叠加数组\n    if (item.children && item.children.length) {            // 判断是否存在子元素，存在则遍历子元素递归调用\n      for (let i = 0; i < item.children.length; i += 1) {\n        travel(item.children[i], arr.concat(item));         // 递归调用，并对数组 arr 进行叠加，注：此处不能用push，因此处是作为参数用来传递的，push 返回的是数组长度\n      }\n    } else {                                                // 若不存在子元素，则一条链路遍历结束，将叠加数组添加到 newArr 中\n      newArr.push(arr.concat(item));                        // 注意此处要记得将本次递归的 item 添加到arr中\n    }\n  }(obj, []));                                              // 初始递归调用，此时的 item 为传入的树结构， 叠加数组arr为空\n  return newArr;\n}\n```\n\n``` bash\n// 法二\nconst initArr = (obj) => {\n  const newArr = [];\n  (function travel(item, arr){\n    const itemArr = [...arr];                      // ES6 深拷贝数组，此处是让每次travel都有一个独立的itemArr, 防止公用全局arr叠加时造成污染\n    itemArr.push(item);                            // 由于 itemArr 为每次递归独立的叠加数组，故直接 push 改变数组本身即可\n    if (item.children && item.children.length) {\n      for (let i in item.children) {\n        travel(data.children[i], itemArr);\n      }\n    } else {\n      newArr.push(itemArr);\n    }\n  })(obj, [])\n  return newArr;\n}\n```\n\n`\n结果如下图\n`\n![递归解析树结构](递归树结构解析/result.jpg)\n\n","slug":"递归树结构解析","published":1,"updated":"2018-10-08T08:23:16.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn05122g000xw8ujfjl8n1mw","content":"<p>用递归的方式将树结构从根到叶子节点解析成数组<br><a id=\"more\"></a></p>\n<p>从后台获取树结构的 json 数据，渲染成树图结构<br>由于项目需求，需要将所有可行链路展示出来，于是采用递归方式将树结构解析为数组<br>算法不算复杂，但用很多细节需要注意，很有价值，故记录下来以备以后查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据结构如下：                </span><br><span class=\"line\">     a                       </span><br><span class=\"line\">    / \\     </span><br><span class=\"line\">   b   e     </span><br><span class=\"line\">  / \\   \\     </span><br><span class=\"line\"> c   d   f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const obj = &#123;</span><br><span class=\"line\">  val: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">  children: [</span><br><span class=\"line\">    &#123; val: <span class=\"string\">'b'</span>, children: [</span><br><span class=\"line\">        &#123; val: <span class=\"string\">'c'</span>, children: [] &#125;,</span><br><span class=\"line\">        &#123; val: <span class=\"string\">'d'</span>, children: [] &#125;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; val: <span class=\"string\">'e'</span>, children: [</span><br><span class=\"line\">        &#123; val: <span class=\"string\">'f'</span>, &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>废话不多说，直接上代码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 法一</span><br><span class=\"line\">const initArr = (obj) =&gt; &#123;</span><br><span class=\"line\">  const newArr = [];                                        // 定义空数组，用于每次遍历结束后存储结果</span><br><span class=\"line\">  (<span class=\"keyword\">function</span> travel(item, arr)&#123;                              // 回调函数，立即执行 item为每次执行处理的对象，arr为叠加数组</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.children &amp;&amp; item.children.length) &#123;            // 判断是否存在子元素，存在则遍历子元素递归调用</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> i = 0; i &lt; item.children.length; i += 1) &#123;</span><br><span class=\"line\">        travel(item.children[i], arr.concat(item));         // 递归调用，并对数组 arr 进行叠加，注：此处不能用push，因此处是作为参数用来传递的，push 返回的是数组长度</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;                                                // 若不存在子元素，则一条链路遍历结束，将叠加数组添加到 newArr 中</span><br><span class=\"line\">      newArr.push(arr.concat(item));                        // 注意此处要记得将本次递归的 item 添加到arr中</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;(obj, []));                                              // 初始递归调用，此时的 item 为传入的树结构， 叠加数组arr为空</span><br><span class=\"line\">  <span class=\"built_in\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 法二</span><br><span class=\"line\">const initArr = (obj) =&gt; &#123;</span><br><span class=\"line\">  const newArr = [];</span><br><span class=\"line\">  (<span class=\"keyword\">function</span> travel(item, arr)&#123;</span><br><span class=\"line\">    const itemArr = [...arr];                      // ES6 深拷贝数组，此处是让每次travel都有一个独立的itemArr, 防止公用全局arr叠加时造成污染</span><br><span class=\"line\">    itemArr.push(item);                            // 由于 itemArr 为每次递归独立的叠加数组，故直接 push 改变数组本身即可</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.children &amp;&amp; item.children.length) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> i <span class=\"keyword\">in</span> item.children) &#123;</span><br><span class=\"line\">        travel(data.children[i], itemArr);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      newArr.push(itemArr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)(obj, [])</span><br><span class=\"line\">  <span class=\"built_in\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>结果如下图</code><br><img src=\"/bolg/2018/10/08/递归树结构解析/result.jpg\" alt=\"递归解析树结构\"></p>\n","site":{"data":{}},"excerpt":"<p>用递归的方式将树结构从根到叶子节点解析成数组<br></p>","more":"<p></p>\n<p>从后台获取树结构的 json 数据，渲染成树图结构<br>由于项目需求，需要将所有可行链路展示出来，于是采用递归方式将树结构解析为数组<br>算法不算复杂，但用很多细节需要注意，很有价值，故记录下来以备以后查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据结构如下：                </span><br><span class=\"line\">     a                       </span><br><span class=\"line\">    / \\     </span><br><span class=\"line\">   b   e     </span><br><span class=\"line\">  / \\   \\     </span><br><span class=\"line\"> c   d   f</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const obj = &#123;</span><br><span class=\"line\">  val: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">  children: [</span><br><span class=\"line\">    &#123; val: <span class=\"string\">'b'</span>, children: [</span><br><span class=\"line\">        &#123; val: <span class=\"string\">'c'</span>, children: [] &#125;,</span><br><span class=\"line\">        &#123; val: <span class=\"string\">'d'</span>, children: [] &#125;,</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123; val: <span class=\"string\">'e'</span>, children: [</span><br><span class=\"line\">        &#123; val: <span class=\"string\">'f'</span>, &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>废话不多说，直接上代码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 法一</span><br><span class=\"line\">const initArr = (obj) =&gt; &#123;</span><br><span class=\"line\">  const newArr = [];                                        // 定义空数组，用于每次遍历结束后存储结果</span><br><span class=\"line\">  (<span class=\"keyword\">function</span> travel(item, arr)&#123;                              // 回调函数，立即执行 item为每次执行处理的对象，arr为叠加数组</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.children &amp;&amp; item.children.length) &#123;            // 判断是否存在子元素，存在则遍历子元素递归调用</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> i = 0; i &lt; item.children.length; i += 1) &#123;</span><br><span class=\"line\">        travel(item.children[i], arr.concat(item));         // 递归调用，并对数组 arr 进行叠加，注：此处不能用push，因此处是作为参数用来传递的，push 返回的是数组长度</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;                                                // 若不存在子元素，则一条链路遍历结束，将叠加数组添加到 newArr 中</span><br><span class=\"line\">      newArr.push(arr.concat(item));                        // 注意此处要记得将本次递归的 item 添加到arr中</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;(obj, []));                                              // 初始递归调用，此时的 item 为传入的树结构， 叠加数组arr为空</span><br><span class=\"line\">  <span class=\"built_in\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 法二</span><br><span class=\"line\">const initArr = (obj) =&gt; &#123;</span><br><span class=\"line\">  const newArr = [];</span><br><span class=\"line\">  (<span class=\"keyword\">function</span> travel(item, arr)&#123;</span><br><span class=\"line\">    const itemArr = [...arr];                      // ES6 深拷贝数组，此处是让每次travel都有一个独立的itemArr, 防止公用全局arr叠加时造成污染</span><br><span class=\"line\">    itemArr.push(item);                            // 由于 itemArr 为每次递归独立的叠加数组，故直接 push 改变数组本身即可</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item.children &amp;&amp; item.children.length) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"built_in\">let</span> i <span class=\"keyword\">in</span> item.children) &#123;</span><br><span class=\"line\">        travel(data.children[i], itemArr);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      newArr.push(itemArr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)(obj, [])</span><br><span class=\"line\">  <span class=\"built_in\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>结果如下图</code><br><img src=\"/bolg/2018/10/08/递归树结构解析/result.jpg\" alt=\"递归解析树结构\"></p>"}],"PostAsset":[{"_id":"source/_posts/hexo-创建文章/banner.jpg","slug":"banner.jpg","post":"cjn0512150001w8uj9pa18m9j","modified":0,"renderable":0},{"_id":"source/_posts/hexo-创建文章/suoluetu.png","slug":"suoluetu.png","post":"cjn0512150001w8uj9pa18m9j","modified":0,"renderable":0},{"_id":"source/_posts/给Hexo博客添加访问统计/timg.jpg","slug":"timg.jpg","post":"cjn05121c0005w8uj8jzjnrt4","modified":0,"renderable":0},{"_id":"source/_posts/hexo-创建文章/lujing.jpg","slug":"lujing.jpg","post":"cjn0512150001w8uj9pa18m9j","modified":0,"renderable":0},{"_id":"source/_posts/hexo-创建文章/lujing2.jpg","slug":"lujing2.jpg","post":"cjn0512150001w8uj9pa18m9j","modified":0,"renderable":0},{"_id":"source/_posts/hexo-创建文章/wenjian.jpg","slug":"wenjian.jpg","post":"cjn0512150001w8uj9pa18m9j","modified":0,"renderable":0},{"_id":"source/_posts/递归树结构解析/result.jpg","slug":"result.jpg","post":"cjn05122g000xw8ujfjl8n1mw","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjn0512110000w8ujunutq8o7","category_id":"cjn0512170002w8uji3damkex","_id":"cjn05121j0009w8uj4fxc6x8i"},{"post_id":"cjn0512150001w8uj9pa18m9j","category_id":"cjn05121i0007w8uj7dksxha3","_id":"cjn05121n000fw8ujxsswcjzl"},{"post_id":"cjn0512190004w8uj63t3oj35","category_id":"cjn05121i0007w8uj7dksxha3","_id":"cjn05121p000iw8ujt11239kx"},{"post_id":"cjn05121c0005w8uj8jzjnrt4","category_id":"cjn05121i0007w8uj7dksxha3","_id":"cjn05121p000kw8ujs3o48phf"},{"post_id":"cjn05121h0006w8ujx7hp3tna","category_id":"cjn05121o000hw8ujxtx85257","_id":"cjn05121q000nw8ujzqjkp2jy"},{"post_id":"cjn05122g000xw8ujfjl8n1mw","category_id":"cjn05121o000hw8ujxtx85257","_id":"cjn05122m0013w8ujn8b1lvso"}],"PostTag":[{"post_id":"cjn0512110000w8ujunutq8o7","tag_id":"cjn0512190003w8ujuikes62m","_id":"cjn05121m000cw8ujx4swccz7"},{"post_id":"cjn0512110000w8ujunutq8o7","tag_id":"cjn05121i0008w8uj094ts4e6","_id":"cjn05121m000dw8ujgozuhfmb"},{"post_id":"cjn0512150001w8uj9pa18m9j","tag_id":"cjn05121k000bw8ujyyzn3b01","_id":"cjn05121q000mw8ujtxstpx8c"},{"post_id":"cjn0512150001w8uj9pa18m9j","tag_id":"cjn05121o000gw8ujh7m8h13y","_id":"cjn05121q000ow8ujvw8q37d4"},{"post_id":"cjn0512150001w8uj9pa18m9j","tag_id":"cjn05121p000jw8ujq2o5fv96","_id":"cjn05121r000qw8ujni8uwg8q"},{"post_id":"cjn0512190004w8uj63t3oj35","tag_id":"cjn05121k000bw8ujyyzn3b01","_id":"cjn05121r000rw8ujsd92ycpd"},{"post_id":"cjn05121c0005w8uj8jzjnrt4","tag_id":"cjn05121k000bw8ujyyzn3b01","_id":"cjn05121s000tw8uj9xpbny53"},{"post_id":"cjn05121h0006w8ujx7hp3tna","tag_id":"cjn05121r000sw8uj24wld4pn","_id":"cjn05121t000vw8ujomn8z3iv"},{"post_id":"cjn05121h0006w8ujx7hp3tna","tag_id":"cjn05121s000uw8uj2kck1k82","_id":"cjn05121t000ww8ujlsy2s9t9"},{"post_id":"cjn05122g000xw8ujfjl8n1mw","tag_id":"cjn05121r000sw8uj24wld4pn","_id":"cjn05122k0010w8ujklv6eyax"},{"post_id":"cjn05122g000xw8ujfjl8n1mw","tag_id":"cjn05121s000uw8uj2kck1k82","_id":"cjn05122l0012w8ujv0afjp7p"},{"post_id":"cjn05122g000xw8ujfjl8n1mw","tag_id":"cjn05121p000jw8ujq2o5fv96","_id":"cjn05122m0014w8uj2gmuuzs1"}],"Tag":[{"name":"LOL","_id":"cjn0512190003w8ujuikes62m"},{"name":"video","_id":"cjn05121i0008w8uj094ts4e6"},{"name":"hexo","_id":"cjn05121k000bw8ujyyzn3b01"},{"name":"markdown","_id":"cjn05121o000gw8ujh7m8h13y"},{"name":"前端","_id":"cjn05121p000jw8ujq2o5fv96"},{"name":"js","_id":"cjn05121r000sw8uj24wld4pn"},{"name":"算法","_id":"cjn05121s000uw8uj2kck1k82"}]}}